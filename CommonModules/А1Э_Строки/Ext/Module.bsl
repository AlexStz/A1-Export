#Область СтроковыеФункции

Функция ОбрезатьПоПодстроке(Строка, Подстрока, ОбрезатьНачало = Истина, СохранятьПодстроку = Ложь) Экспорт
	ПозицияПодстроки = СтрНайти(Строка, Подстрока);
	Если ПозицияПодстроки = 0 Тогда
		Возврат Строка;
	КонецЕсли;
	Если ОбрезатьНачало Тогда
		ПозицияОбрезки = ?(СохранятьПодстроку, ПозицияПодстроки, ПозицияПодстроки + СтрДлина(Подстрока));
	Иначе
		ПозицияОбрезки = ?(СохранятьПодстроку, ПозицияПодстроки + СтрДлина(Подстрока) - 1, ПозицияПодстроки - 1);
	КонецЕсли;
	Результат = ?(ОбрезатьНачало, Сред(Строка, ПозицияОбрезки), Лев(Строка, ПозицияОбрезки));
	Возврат Результат;
КонецФункции

Функция Перед(Строка, Подстрока) Экспорт
	Возврат ОбрезатьПоПодстроке(Строка, Подстрока, Ложь, Ложь);
КонецФункции

Функция После(Строка, Подстрока) Экспорт
	Возврат ОбрезатьПоПодстроке(Строка, Подстрока, Истина, Ложь); 
КонецФункции

Функция Обрубить(Строка, КоличествоСимволовИлиПодстрока) Экспорт
	Если ТипЗнч(КоличествоСимволовИлиПодстрока) = Тип("Число") Тогда
		КоличествоСимволов = КоличествоСимволовИлиПодстрока;
		Длина = СтрДлина(Строка);
		Если КоличествоСимволов >= Длина Тогда
			Возврат "";
		КонецЕсли;
		Возврат Лев(Строка, Длина - КоличествоСимволов);
	ИначеЕсли ТипЗнч(КоличествоСимволовИлиПодстрока) = Тип("Строка") Тогда
		Подстрока = КоличествоСимволовИлиПодстрока;
		Если СтрЗаканчиваетсяНа(Строка, Подстрока) Тогда
			Возврат Лев(Строка, СтрДлина(Строка) - СтрДлина(Подстрока));
		Иначе
			Возврат Строка;
		КонецЕсли;
	Иначе
		А1Э_Служебный.ИсключениеНеверныйТип("КоличествоСимволовИлиПодстрока", "А1Э_Строки.Обрубить", КоличествоСимволовИлиПодстрока, "Строка, Число");
	КонецЕсли;
	
КонецФункции

Функция ЗавершитьПодстрокой(Строка, Подстрока) Экспорт
	Результат = Строка;
	Если НЕ СтрЗаканчиваетсяНа(Строка, Подстрока) Тогда
		Результат = Результат + Подстрока;
	КонецЕсли;
	Возврат Результат;
КонецФункции

Функция ПодстрокаМежду(Строка, ПодстрокаНачала, ПодстрокаОкончания) Экспорт 
	ПозицияНачала = СтрНайти(Строка, ПодстрокаНачала);
	Если ПозицияНачала = 0 Тогда
		Возврат "";
	КонецЕсли;
	НачальныйСимвол = ПозицияНачала + СтрДлина(ПодстрокаНачала);
	ПозицияОкончания = СтрНайти(Строка, ПодстрокаОкончания,,НачальныйСимвол);
	Если ПозицияОкончания = 0 Тогда
		Возврат "";
	КонецЕсли;
	Возврат Сред(Строка, НачальныйСимвол, ПозицияОкончания - НачальныйСимвол);
КонецФункции

Функция УдалитьЛидирующиеНули(Строка) Экспорт
	Результат = Строка;
	Пока Лев(Результат, 1) = "0" Цикл
		Результат = Сред(Результат, 2);
	КонецЦикла;
	Возврат Результат;
КонецФункции

Функция Разделить(Знач Строка, Разделитель = ",", ВключатьПустые = Истина) Экспорт
	
	Если СтрДлина(Разделитель) = 1 Тогда
		Возврат СтрРазделить(Строка, Разделитель, ВключатьПустые);
	КонецЕсли;
	
	Результат = Новый Массив;
	
	Позиция = СтрНайти(Строка, Разделитель);
	Пока Позиция > 0 Цикл
		Подстрока = Лев(Строка, Позиция - 1);
		Если ВключатьПустые Или Не ПустаяСтрока(Подстрока) Тогда
			Результат.Добавить(Подстрока);
		КонецЕсли;
		Строка = Сред(Строка, Позиция + СтрДлина(Разделитель));
		Позиция = СтрНайти(Строка, Разделитель);
	КонецЦикла;
	
	Если ВключатьПустые Или Не ПустаяСтрока(Строка) Тогда
		Результат.Добавить(Строка);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти 

#Область ПреобразованияВСтроку

// Стандартное преобразование в строку, но с убиранием неразрывных пробелов.
//
// Параметры:
//  Значение - 	 - 
// 
// Возвращаемое значение:
//   - 
//
Функция ВСтроку(Значение) Экспорт
	Возврат СтрЗаменить(Строка(Значение),Символы.НПП,"");		
КонецФункции

Функция ВСтрокуПользователю(Значение) Экспорт 
	Результат = А1Э_Даты.ДеньМесяцГод(Значение);
	Если Результат <> Неопределено Тогда
		Возврат Результат;
	КонецЕсли;
	
	Возврат Строка(Значение);
КонецФункции

// Функция - Сумма прописью официальная
//
// Параметры:
//  Число		 - 	 - 
//  СтрокаВалют	 - 	 - 
// 
// Возвращаемое значение:
//   - 
//
Функция СуммаПрописьюОфициальная(Число, СтрокаВалют = "") Экспорт
	Если СтрокаВалют = "" Тогда
		СтрокаВалют = "рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2";
	КонецЕсли;
	
	Строка = Формат(Число, "ЧДЦ=0") + " (" + ЧислоПрописью(Число, "Л=ru_RU", СтрокаВалют);
	Возврат СтрЗаменить(Строка, " руб", ") руб");
КонецФункции

// Возвращает номер на печать по стандартам 1С - убирает префикс, дефис и лидирующие нули.
//
// Параметры:
//  Строка	 - Строка - 
// 
// Возвращаемое значение:
//   - 
//
Функция НомерНаПечать(Строка) Экспорт 
	БезПрефикса = После(Строка, "-");
	БезНулей = УдалитьЛидирующиеНули(БезПрефикса);
	Возврат БезНулей;
КонецФункции

// Возвращает номер и дату документа, в виде "129 от 16.12.1989 г."
//
// Параметры:
//  Номер	 - Строка - 
//  Дата	 - Дата	 - 
// 
// Возвращаемое значение:
//   - 
//
Функция НомерДатаДокумента(Номер, Дата) Экспорт
	Возврат НомерНаПечать(Номер) + " от " + А1Э_Даты.ДеньМесяцГод(Дата) + " г.";
КонецФункции

// Возвращает наименование, соответствущее идентификатору 
// (как автоматическое заполнение синонима при указании наименования объекта метаданных)
//
// Параметры:
//  Идентификатор	 - Строка - 
// 
// Возвращаемое значение:
//   - 
//
Функция Наименование(Идентификатор) Экспорт
	
	Длина = СтрДлина(Идентификатор);
	Наименование = Лев(Идентификатор, 1);
	Для Сч = 2 ПО Длина Цикл
		Символ = Сред(Идентификатор, Сч, 1);
		Если ВРЕГ(Символ) = Символ И НРЕГ(Символ) <> Символ Тогда
			Наименование = Наименование + " " + НРЕГ(Символ);
		ИначеЕсли Символ = "_" Тогда
			Наименование = Наименование + " ";
		Иначе
			Наименование = Наименование + Символ;
		КонецЕсли;
	КонецЦикла;
	Возврат Наименование;
	
КонецФункции

Функция ПоШаблону(Шаблон, Структура) Экспорт
	Текст = Шаблон;
	Для Каждого Пара Из Структура Цикл
		Если ТипЗнч(Пара.Значение) = Тип("Массив") Тогда
			Значение = СтрСоединить(Пара.Значение, "; ");
		Иначе
			Значение = Пара.Значение;
		КонецЕсли;
		Текст = СтрЗаменить(Текст, "[" + Пара.Ключ +"]", "" + ВСтрокуПользователю(Значение));
	КонецЦикла;
	Возврат Текст;
КонецФункции

#КонецОбласти 

#Область Служебно

// Возвращает ОписаниеТипа строки заданной длины (переменной)
//
// Параметры:
//  Длина	 - Число - длина строки описания
// 
// Возвращаемое значение:
//   - 
//
Функция ОписаниеТипа(Длина) Экспорт
	Возврат Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(Длина));	
КонецФункции

#КонецОбласти 

#Область Устарело

// Устарело. Использовать ОписаниеТипа.
//
// Параметры:
//  Длина	 - 	 - 
// 
// Возвращаемое значение:
//   - 
//
Функция Описание(Длина) Экспорт
	Возврат ОписаниеТипа(Длина);	
КонецФункции

// Ошибочно. Использовать типовую СтрНачинаетсяС
Функция НачалаРавны(Строка1, Строка2, КоличествоСимволов = Неопределено) Экспорт
	Если ТипЗнч(КоличествоСимволов) = Тип("Число") Тогда
		МинДлина = Мин(СтрДлина(Строка1), СтрДлина(Строка2), КоличествоСимволов);
	Иначе
		МинДлина = Мин(СтрДлина(Строка1), СтрДлина(Строка2));
	КонецЕсли;
	Возврат Лев(Строка1, МинДлина) = Лев(Строка2, МинДлина);
КонецФункции

#КонецОбласти 
