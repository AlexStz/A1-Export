#Область НеЗакончено

Функция ЗаписатьВНепериодическийНезависимыйРегистрСведенийНеЗакончено(ТаблицаЗначений, ИмяРегистра) Экспорт
	#Если Сервер И НЕ Сервер Тогда
		ТаблицаЗначений = Новый ТаблицаЗначений;		
	#КонецЕсли 
	МассивИзмерений = Новый Массив;
	РабочаяТаблица = ТаблицаЗначений.Скопировать();
	Для Каждого Измерение ИЗ Метаданные.РегистрыСведений[ИмяРегистра].Измерения Цикл
		МассивИзмерений.Добавить(Измерение.Имя);
	КонецЦикла;
	СтрокаИзмерений = СтрСоединить(МассивИзмерений,",");
	РабочаяТаблица.Свернуть(СтрокаИзмерений);
	Для Каждого Строка Из РабочаяТаблица Цикл
		НаборЗаписей = РегистрыСведений[ИмяРегистра];
	КонецЦикла;
	
КонецФункции

Функция ПолучитьСуществующиеЗаписиРегистра(ТаблицаЗначений, ИмяРегистра) Экспорт
	МассивЗапросов = Новый Массив;
	МассивЗапросов.Добавить(ТекстЗапросаЗагрузкиТаблицыЗначенийВоВременнуюТаблицу(ТаблицаЗначений, "ТаблицаКЗагрузке"));
	
КонецФункции

Функция ТекстЗапросаЗагрузкиТаблицыЗначенийВоВременнуюТаблицу(ТаблицаЗначений, ИмяВременнойТаблицы, ИмяПараметраЗапроса = "ТаблицаЗначений")
	МассивСтрокЗапроса = Новый Массив;
	МассивСтрокЗапроса.Добавить("ВЫБРАТЬ");
	Для Каждого Колонка Из ТаблицаЗначений.Колонки Цикл
		МассивСтрокЗапроса.Добавить("Таблица." + Колонка.Имя + ",");
	КонецЦикла;
	ПоследняяСтрока = МассивСтрокЗапроса[МассивСтрокЗапроса.Количество() - 1];
	МассивСтрокЗапроса[МассивСтрокЗапроса.Количество() - 1] = Лев(ПоследняяСтрока, СтрДлина(ПоследняяСтрока) - 1);
	МассивСтрокЗапроса.Добавить("ПОМЕСТИТЬ " + ИмяВременнойТаблицы);
	МассивСтрокЗапроса.Добавить("ИЗ &" + ИмяПараметраЗапроса + " КАК Таблица");
	ТекстЗапроса = СтрСоединить(МассивСтрокЗапроса, Символы.ПС);
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаПоискаСуществующихЗаписей(ИмяРегистра, ИмяВременнойТаблицы)
	МассивСтрокЗапроса = Новый Массив;	
КонецФункции

Функция МассивИзмерений()
	
КонецФункции 

#КонецОбласти 

Функция ЗаписатьВНепериодическийНезависимыйРегистрСведений(ТаблицаЗначений, ИмяРегистра) Экспорт
	#Если Сервер И НЕ Сервер Тогда
		ТаблицаЗначений = Новый ТаблицаЗначений;		
	#КонецЕсли
	
	НачатьТранзакцию();
	Для Каждого Строка Из ТаблицаЗначений Цикл
		МенеджерЗаписи = РегистрыСведений[ИмяРегистра].СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, Строка);
		Попытка
			МенеджерЗаписи.Записать();
		Исключение
			ОписаниеОшибки = ОписаниеОшибки();
			ОтменитьТранзакцию();
			ВызватьИсключение ОписаниеОшибки;
		КонецПопытки
	КонецЦикла;
	ЗафиксироватьТранзакцию();
	Возврат Истина;
КонецФункции
