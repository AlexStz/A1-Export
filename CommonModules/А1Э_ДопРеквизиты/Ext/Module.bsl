#Область ПрограммныйИнтерфейс

// Получает значение дополнительного реквизита по его программному имени. 
//
// Параметры:
//  Ссылка	 - ЛюбаяСсылка - должен иметь таблицу ДополнительныеРеквизиты иначе будет ошибка 
//  Имя		 - Строка - имя дополнительного реквизита (в подвале формы, в разделе "Для разработчиков")
// 
// Возвращаемое значение:
//  ЛюбоеЗначение - значение допреквизита. Если он никогда не был задан, возвращает Неопределено. 
//
Функция Значение(Ссылка, Имя, ЭтоДопСведение = Ложь, ЗначениеПоУмолчанию = Неопределено) Экспорт
	Если Ссылка = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ИменаРеквизитов = А1Э_Массивы.Массив(Имя);		
	Если ИменаРеквизитов.Количество() > 1 Тогда
		А1Э_Служебный.СлужебноеИсключение("Ожидается единственное имя допреквизита!");
	КонецЕсли;
	
	Если Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(Ссылка)) Или Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(Ссылка)) Тогда
		//Это ссылка
		Результат = ОпределениеЗначений(Ссылка, ИменаРеквизитов, ЭтоДопСведение);
	Иначе
		//Это объект
		Если ЭтоДопСведение Тогда
			Результат = ОпределениеЗначений(Ссылка.Ссылка, ИменаРеквизитов, ЭтоДопСведение);
		Иначе
			Свойство = Свойство(Имя);
			Для Каждого Строка Из Ссылка.ДополнительныеРеквизиты Цикл
				Если Строка.Свойство = Свойство Тогда
					Возврат Строка.Значение;
				КонецЕсли;
			КонецЦикла;
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	
	Если Результат.Пустой() Тогда
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	Возврат Выборка.Значение;

КонецФункции 		

Функция Значения(Ссылка, Знач Имена, УбиратьПрефиксы = Истина, ЭтоДопСведение = Ложь, ЗначениеПоУмолчанию = Неопределено) Экспорт 
	
	Имена = А1Э_Массивы.Массив(Имена);	
	Результат = ОпределениеЗначений(Ссылка, Имена, ЭтоДопСведение);
	
	Выборка = Результат.Выбрать();
	
	Структура = Новый Структура;
	Пока Выборка.Следующий() Цикл
		Структура.Вставить(Выборка.Имя, Выборка.Значение);
	КонецЦикла;
	
	Для Каждого Имя Из Имена Цикл
		Если НЕ Структура.Свойство(Имя) Тогда
			Структура.Вставить(Имя, ЗначениеПоУмолчанию);
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ УбиратьПрефиксы Тогда
		Возврат Структура;
	КонецЕсли;
	
	ИтоговаяСтруктура = Новый Структура;
	
	Для Каждого Пара Из Структура Цикл
		ИтоговаяСтруктура.Вставить(А1Э_Строки.ОбрезатьПоПодстроке(Пара.Ключ, "_", Истина, Ложь), Пара.Значение);
	КонецЦикла;
	
	Возврат ИтоговаяСтруктура;
КонецФункции

Функция ЗначениеСсылок(Знач Ссылки, Имя, ЭтоДопСведение = Ложь) Экспорт
	Ссылки = А1Э_Массивы.Массив(Ссылки);
	Имена = А1Э_Массивы.Массив(Имя);	
	Результат = ОпределениеЗначений(Ссылки, Имена, ЭтоДопСведение);
	Выборка = Результат.Выбрать();
	Соответствие = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		Соответствие.Вставить(Выборка.Ссылка, Выборка.Значение);
	КонецЦикла;
	Для Каждого Ссылка Из Ссылки Цикл
		Если Соответствие[Ссылка] = Неопределено Тогда
			Соответствие.Вставить(Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Соответствие;
КонецФункции 

// Получает ссылку по значению дополнительного реквизита. Если находит несколько ссылок может вернуть любую. 
//
// Параметры:
//  ИмяТипаИлиТип	 - Тип, Строка - имя справочника/документа или Тип ему соответствующий 
//  Имя				 - Строка - имя дополнительного реквизита (в подвале формы, в разделе "Для разработчиков")
//  Значение		 - ЛюбаяСсылка, Дата, Строка, Число, Булево - значение дополнительного реквизита
// 
// Возвращаемое значение:
//  ЛюбаяСсылка - ссылка на элемент соответствующего справочника/документа. 
//
Функция ЭлементПоЗначению(ИмяТипаИлиТип, Имя, Значение) Экспорт
	Если ТипЗнч(ИмяТипаИлиТип) = Тип("Тип") Тогда
		ИмяТипа = Метаданные.НайтиПоТипу(ИмяТипаИлиТип).ПолноеИмя();
	ИначеЕсли ТипЗнч(ИмяТипаИлиТип) = Тип("Строка") Тогда
		ИмяТипа = ИмяТипаИлиТип;
	Иначе
		ВызватьИсключение "Параметр ""ИмяТипаИлиТип"" неверного типа!";
	КонецЕсли;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДополнительныеРеквизиты.Ссылка КАК Ссылка
	|ИЗ
	|	&ИмяТаблицы КАК ДополнительныеРеквизиты
	|ГДЕ
	|	ДополнительныеРеквизиты.Значение = &Значение
	|	И ДополнительныеРеквизиты.Свойство.Имя = &Имя
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИмяТаблицы", ИмяТипа + ".ДополнительныеРеквизиты");
	Запрос.УстановитьПараметр("Значение", Значение); 
	Запрос.УстановитьПараметр("Имя", Имя);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Возврат ?(Выборка.Следующий(), Выборка.Ссылка, Неопределено);
	
КонецФункции

// Программно устанавливает значение определенного дополнительного реквизита у объекта
//
// Параметры:
//  Объект	 - ЛюбойОбъект	 - объект справочника/документа. Должен иметь таблицу ДополнительныеРеквизиты с колонками Свойство и Значение.
//  Имя		 - Строка - имя дополнительного реквизита (в подвале формы, в разделе "Для разработчиков")   
//  Значение - ЛюбаяСсылка, Дата, Строка, Число, Булево - значение дополнительного реквизита. 
// 
// Возвращаемое значение:
//   - 
//
Функция Установить(Объект, Имя, Значение, ЭтоДопСведение = Ложь) Экспорт
	Свойство = Свойство(Имя);
	Если Свойство = Неопределено Тогда
		Если ЭтоДопСведение = Истина Тогда
			Текст = "Не найдено дополнительное сведение";
		Иначе
			Текст = "Не найден дополнительный реквизит";
		КонецЕсли;
		ВызватьИсключение Текст + " <" + Имя + "> при попытке установить его значение!";
	КонецЕсли;
	Если ЭтоДопСведение = Истина Тогда
		МенеджерЗаписи = РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Объект = Объект.Ссылка;
		МенеджерЗаписи.Свойство = Свойство;
		МенеджерЗаписи.Значение = Значение;
		МенеджерЗаписи.Записать(Истина);
	Иначе
		Для Каждого Строка Из Объект.ДополнительныеРеквизиты Цикл
			Если Строка.Свойство = Свойство Тогда
				Строка.Значение = Значение;
				Если ТипЗнч(Значение) = Тип("Строка") Тогда
					Строка.ТекстоваяСтрока = Значение;
				КонецЕсли;
				Возврат Ложь;
			КонецЕсли;
		КонецЦикла;
		Строка = Объект.ДополнительныеРеквизиты.Добавить();
		Строка.Свойство = Свойство;
		Строка.Значение = Значение;
		Если ТипЗнч(Значение) = Тип("Строка") Тогда
			Строка.ТекстоваяСтрока = Значение;
		КонецЕсли;
		Возврат Истина;
	КонецЕсли;
КонецФункции

// Функция - Свойство
//
// Параметры:
//  Имя		 - Строка -  имя дополнительного реквизита (в подвале формы, в разделе "Для разработчиков")
// 
// Возвращаемое значение:
//  ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения - ссылка на свойство по его имени
//
Функция Свойство(Имя) Экспорт
	Запрос = Новый Запрос( 
	"ВЫБРАТЬ
	|	ДопРеквизиты.Ссылка КАК Ссылка
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДопРеквизиты
	|ГДЕ
	|	ДопРеквизиты.Имя = &Имя");
	Запрос.УстановитьПараметр("Имя", Имя);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() > 1 Тогда
		ВызватьИсключение "Найдено более одного допреквизита по запросу <Имя>=" + Имя;
	КонецЕсли;
	Если НЕ Выборка.Следующий() Тогда
		Возврат Неопределено;
	КонецЕсли;
	Возврат Выборка.Ссылка;
КонецФункции

Функция Удалить(Объект, Имя) Экспорт
	Свойство = Свойство(Имя);
	Если Свойство = Неопределено Тогда
		ВызватьИсключение "Не найден допреквизит <" + Имя + "> при попытке установить его значение!";
	КонецЕсли;
	Для Каждого Строка Из Объект.ДополнительныеРеквизиты Цикл
		Если Строка.Свойство = Свойство Тогда
			Объект.ДополнительныеРеквизиты.Удалить(Строка.НомерСтроки - 1);
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
КонецФункции

#КонецОбласти 	

#Область ПроверкаСуществованияРеквизитов

Функция ПроверитьСуществованиеСлужебныхДопРеквизитов() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаИмен.Имя КАК Имя
	|ПОМЕСТИТЬ ТаблицаИмен
	|ИЗ
	|	&ТаблицаИмен КАК ТаблицаИмен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаИмен.Имя КАК Имя,
	|	ЕСТЬNULL(ДополнительныеРеквизиты.Ссылка, НЕОПРЕДЕЛЕНО) КАК ДополнительныйРеквизит
	|ИЗ
	|	ТаблицаИмен КАК ТаблицаИмен
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизиты
	|		ПО ТаблицаИмен.Имя = ДополнительныеРеквизиты.Имя";
	Запрос.УстановитьПараметр("ТаблицаИмен", ТаблицаИмен()); 
	Выборка = Запрос.Выполнить().Выбрать();
	МассивСообщений = Новый Массив;
	Пока Выборка.Следующий() Цикл
		Если Выборка.ДополнительныйРеквизит <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		МассивСообщений.Добавить("Для корректной работы программы необходимо создать дополнительный реквизит с именем <" + Выборка.Имя + ">!");
	КонецЦикла;
	Если МассивСообщений.Количество() = 0 Тогда
		Возврат Истина;
	КонецЕсли;
	Сообщить("Отсутствуют ключевые дополнительные реквизиты, необходимые для работы программы!");
	Для Каждого Сообщение Из МассивСообщений Цикл
		Сообщить(Сообщение);
	КонецЦикла;
	Возврат Ложь;
КонецФункции

Функция ДобавитьИмя(ТаблицаИмен, Имя) Экспорт 
	Строка = ТаблицаИмен.Добавить();
	Строка.Имя = Имя;
КонецФункции

Функция ТаблицаИмен() 
	ТаблицаИмен = Новый ТаблицаЗначений;
	ТаблицаИмен.Колонки.Добавить("Имя", А1Э_Строки.Описание(100));
	Если Метаданные.ОбщиеМодули.Найти("А1_ИменаДопРеквизитов") = Неопределено Тогда
		Возврат ТаблицаИмен;
	КонецЕсли;
	
	Попытка
		Выполнить("А1_ИменаДопРеквизитов.ДобавитьИмена(ТаблицаИмен);");
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
	КонецПопытки;
	
	Возврат ТаблицаИмен;
КонецФункции

#КонецОбласти 

#Область Служебно

Функция ОпределениеЗначений(Ссылка, ИменаРеквизитов, ЭтоДопСведение)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДопРеквизиты.Ссылка КАК Ссылка,
	|	ДопРеквизиты.Свойство.Имя КАК Имя,
	|	ДопРеквизиты.Значение КАК Значение
	|ИЗ
	|	&ИмяТаблицы КАК ДопРеквизиты
	|ГДЕ
	|	ДопРеквизиты.Ссылка В(&Ссылка)
	|	И ДопРеквизиты.Свойство.Имя В(&Имена)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Имя";
	Если ЭтоДопСведение Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИмяТаблицы", "РегистрСведений.ДополнительныеСведения");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ДопРеквизиты.Ссылка", "ДопРеквизиты.Объект");
	Иначе
		Если ТипЗнч(Ссылка) = Тип("Массив") Тогда
			ОпределительТипа = Ссылка[0];
		Иначе
			ОпределительТипа = Ссылка;
		КонецЕсли;
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИмяТаблицы", Метаданные.НайтиПоТипу(ТипЗнч(ОпределительТипа)).ПолноеИмя() + ".ДополнительныеРеквизиты"); 
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Имена", ИменаРеквизитов);
	Результат = Запрос.Выполнить();
	Возврат Результат;
КонецФункции 

#КонецОбласти 

#Область А1_ИменаДопРеквизитов

#Если Сервер Или ВнешнееСоединение Тогда
	
	Функция ДобавитьИмена(ТаблицаИмен) Экспорт
		А1Э_ДопРеквизиты.ДобавитьИмя(ТаблицаИмен, ИмяОбъекта_ИмяРеквизита());
	КонецФункции 
	
#КонецЕсли

Функция ИмяОбъекта_ИмяРеквизита() Экспорт
	Возврат "ИмяОбъекта_ИмяРеквизита";	
КонецФункции

#КонецОбласти 

