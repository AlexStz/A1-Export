
#Область ПрограммноеСозданиеОбъектовФорм_Сервер
#Если Не Клиент Тогда
	
	Функция ДобавитьРеквизитыИЭлементы(Форма, МассивОписанийОбъектовФормы) Экспорт
		
		МассивРеквизитов = Новый Массив;
		Для Каждого ОписаниеРеквизита Из МассивОписанийОбъектовФормы Цикл
			ДобавитьРеквизитВМассивПоОписанию(Форма, МассивРеквизитов, ОписаниеРеквизита);
		КонецЦикла;
		Форма.ИзменитьРеквизиты(МассивРеквизитов);
		
		Для Каждого ОписаниеКоманды Из МассивОписанийОбъектовФормы Цикл
			СоздатьКомандуПоОписанию(Форма, ОписаниеКоманды);
		КонецЦикла;
		
		Для Сч = 0 По МассивОписанийОбъектовФормы.Количество() - 1 Цикл
			ОписаниеЭлементаФормы = МассивОписанийОбъектовФормы[Сч]; 
			СоздатьЭлементПоОписанию(Форма, ОписаниеЭлементаФормы);
			СоздатьКнопкуПоОписанию(Форма, ОписаниеЭлементаФормы);
		КонецЦикла;
		
	КонецФункции
	
	Функция ДобавитьОписаниеРеквизитаИЭлемента(МассивОписаний, Имя,
		ОписаниеТипов, ПутьКРеквизиту  = "",
		Заголовок = "", РодительЭлемента = Неопределено,
		ПередЭлементом = Неопределено, Параметры = Неопределено, Действия = Неопределено) Экспорт
		
		Описание = НовыйОписаниеРеквизитаЭлемента();
		Описание.Имя = Имя;
		Описание.ОписаниеТипов = ОписаниеТипов;
		Описание.ПутьКРеквизиту = ПутьКРеквизиту;
		Описание.Заголовок = Заголовок;
		
		Описание.РодительЭлемента = РодительЭлемента;
		Описание.ПередЭлементом = ПередЭлементом;
		
		Если Параметры <> Неопределено Тогда
			А1Э_Структуры.СкопироватьСвойства(Описание.Параметры, Параметры, Истина);
		КонецЕсли;	
		Если Действия <> Неопределено Тогда
			А1Э_Структуры.СкопироватьСвойства(Описание.Действия, Действия, Истина);
		КонецЕсли;
		
		МассивОписаний.Добавить(Описание);
		
	КонецФункции 
	
	Функция ДобавитьОписаниеРеквизита(МассивОписаний, Имя, ОписаниеТипов, ПутьКРеквизиту = "", Заголовок = "") Экспорт
		Описание = НовыйОписаниеРеквизитаЭлемента();
		Описание.Имя = Имя;
		Описание.ОписаниеТипов = ОписаниеТипов;
		Описание.ПутьКРеквизиту = ПутьКРеквизиту;
		Описание.Заголовок = Заголовок;
		Описание.СоздаватьЭлемент = Ложь;
		
		МассивОписаний.Добавить(Описание);
	КонецФункции
	
	Функция ДобавитьОписаниеЭлемента(МассивОписаний, ИмяРеквизита, ПутьКРеквизиту = "", Заголовок = "", 
		РодительЭлемента = Неопределено, ПередЭлементом = Неопределено, Параметры = Неопределено, Действия = Неопределено) Экспорт
		
		Описание = НовыйОписаниеРеквизитаЭлемента();
		Описание.СоздаватьРеквизит = Ложь;
		Описание.Имя = ИмяРеквизита;
		Описание.ПутьКРеквизиту = ПутьКРеквизиту;
		Описание.Заголовок = Заголовок;
		
		Описание.РодительЭлемента = РодительЭлемента;
		Описание.ПередЭлементом = ПередЭлементом;
		
		Если Параметры <> Неопределено Тогда
			А1Э_Структуры.СкопироватьСвойства(Описание.Параметры, Параметры, Истина);
		КонецЕсли;	
		Если Действия <> Неопределено Тогда
			А1Э_Структуры.СкопироватьСвойства(Описание.Действия, Действия, Истина);
		КонецЕсли;
		
		МассивОписаний.Добавить(Описание);
	КонецФункции
	
	Функция ДобавитьОписаниеКомандыИКнопки(МассивОписаний, Имя, Действие, ЭтоГиперссылка = Ложь, Заголовок = "", РодительЭлемента = Неопределено, ПередЭлементом = Неопределено, Подсказка = "") Экспорт 
		Описание = НовыйОписаниеКомандыКнопки();
		Описание.Имя = Имя;
		Описание.Действие = Действие;
		Описание.ИмяКоманды = Имя;
		Описание.ЭтоГиперссылка = ЭтоГиперссылка;
		Описание.РодительЭлемента = РодительЭлемента;
		Описание.ПередЭлементом = ПередЭлементом;
		Описание.Подсказка = Подсказка;
		Описание.Заголовок = Заголовок;
		
		МассивОписаний.Добавить(Описание);
	КонецФункции
	
	Функция ДобавитьОписаниеКоманды(МассивОписаний, Имя, Действие, Заголовок = "", Подсказка = "") Экспорт
		Описание = НовыйОписаниеКомандыКнопки();
		Описание.Имя = Имя;
		Описание.Действие = Действие;
		Описание.Подсказка = Подсказка;
		Описание.Заголовок = Заголовок;
		Описание.СоздаватьКнопку = Ложь;
		
		МассивОписаний.Добавить(Описание);
	КонецФункции
	
	Функция ДобавитьОписаниеКнопки(МассивОписаний, Имя, ИмяКоманды = "", Родитель = Неопределено, ЭтоГиперссылка = Ложь, Заголовок = "") Экспорт 
		Описание = НовыйОписаниеКомандыКнопки();
		Описание.Имя = Имя;
		Если ИмяКоманды = "" Тогда
			Описание.ИмяКоманды = Имя;
		Иначе 
			Описание.ИмяКоманды = ИмяКоманды;
		КонецЕсли;
		
		Описание.ЭтоГиперссылка = ЭтоГиперссылка;
		Описание.Родитель = Родитель;
		Описание.Заголовок = Заголовок;
		Описание.СоздаватьКоманду = Ложь;
		
		МассивОписаний.Добавить(Описание);
	КонецФункции
	
	#Область Служебно
	
	Функция НовыйОписаниеРеквизитаЭлемента()
		СтруктураРеквизита = Новый Структура;
		
		СтруктураРеквизита.Вставить("Класс", А1Э_Классы.ОписаниеРеквизитаЭлемента());
		СтруктураРеквизита.Вставить("СоздаватьРеквизит", Истина);
		СтруктураРеквизита.Вставить("Имя", "");
		СтруктураРеквизита.Вставить("ОписаниеТипов", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(10)));
		СтруктураРеквизита.Вставить("ПутьКРеквизиту", "");
		СтруктураРеквизита.Вставить("Заголовок", "");
		
		СтруктураРеквизита.Вставить("СоздаватьЭлемент", Истина);
		СтруктураРеквизита.Вставить("РодительЭлемента", Неопределено);
		СтруктураРеквизита.Вставить("ПередЭлементом", Неопределено);
		СтруктураРеквизита.Вставить("Параметры", НовыйПараметрыРеквизита());
		СтруктураРеквизита.Вставить("Действия", Новый Структура);
		
		Возврат СтруктураРеквизита;
		
	КонецФункции
	
	Функция НовыйПараметрыРеквизита()
		
		Параметры = Новый Структура;
		
		Параметры.Вставить("Тип", Тип("ПолеФормы"));
		Параметры.Вставить("Вид_ПоУмолчанию", ВидПоляФормы.ПолеВвода);
		
		Возврат Параметры;
		
	КонецФункции
	
	Функция ДобавитьРеквизитВМассивПоОписанию(Форма, МассивРеквизитов, ОписаниеРеквизита) Экспорт
		Если А1Э_Классы.Класс(ОписаниеРеквизита) <> А1Э_Классы.ОписаниеРеквизитаЭлемента() Тогда
			Возврат Неопределено;
		КонецЕсли;
		Если НЕ ОписаниеРеквизита.СоздаватьРеквизит Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		ОписаниеТипов = А1Э_СтандартныеТипы.ОписаниеТиповПолучить(ОписаниеРеквизита.ОписаниеТипов);
		МассивРеквизитов.Добавить(Новый РеквизитФормы(ОписаниеРеквизита.Имя, ОписаниеТипов, ОписаниеРеквизита.ПутьКРеквизиту, ОписаниеРеквизита.Заголовок)); 
	КонецФункции
	
	Функция СоздатьЭлементПоОписанию(Форма, ОписаниеРеквизита) Экспорт
		Если А1Э_Классы.Класс(ОписаниеРеквизита) <> А1Э_Классы.ОписаниеРеквизитаЭлемента() Тогда
			Возврат Неопределено;
		КонецЕсли;
		Если НЕ ОписаниеРеквизита.СоздаватьЭлемент Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		ЭлементФормы = Форма.Элементы.Вставить(ИмяТаблицыПоляФормы(Форма, ОписаниеРеквизита.РодительЭлемента) + ОписаниеРеквизита.Имя, ОписаниеРеквизита.Параметры.Тип, ЭлементФормы(Форма, ОписаниеРеквизита.РодительЭлемента), ЭлементФормы(Форма, ОписаниеРеквизита.ПередЭлементом));
		Если НЕ ОписаниеРеквизита.СоздаватьРеквизит Тогда
			ЭлементФормы.Заголовок = ОписаниеРеквизита.Заголовок;
		КонецЕсли;
		
		Если Тип(ЭлементФормы) = Тип("ПолеФормы") Тогда
			ЭлементФормы.Вид = ОписаниеРеквизита.Параметры.Вид_ПоУмолчанию;
			Попытка
				Если ТипЗнч(Реквизит(Форма, ОписаниеРеквизита.Имя, ОписаниеРеквизита.ПутьКРеквизиту)) = Тип("Булево") Тогда
					ЭлементФормы.Вид = ВидПоляФормы.ПолеФлажка;
				КонецЕсли;
			Исключение
				ОписаниеОшибки = ОписаниеОшибки();
			КонецПопытки;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ЭлементФормы, ОписаниеРеквизита.Параметры);
		
		Если Тип(ЭлементФормы) = Тип("ПолеФормы") Тогда
			Если ОписаниеРеквизита.ПутьКРеквизиту <> "" Тогда
				ЭлементФормы.ПутьКДанным = ОписаниеРеквизита.ПутьКРеквизиту + "." + ОписаниеРеквизита.Имя;
			Иначе
				ЭлементФормы.ПутьКДанным = ОписаниеРеквизита.Имя;
			КонецЕсли;
			Для Каждого Действие Из ОписаниеРеквизита.Действия Цикл
				ЭлементФормы.УстановитьДействие(Действие.Ключ, Действие.Значение);
			КонецЦикла;
		КонецЕсли;
		
		Возврат ЭлементФормы;
	КонецФункции
	
	Функция НовыйОписаниеКомандыКнопки()
		Структура = Новый Структура;
		
		Структура.Вставить("Класс", А1Э_Классы.ОписаниеКомандыКнопки());
		Структура.Вставить("СоздаватьКоманду", Истина);
		Структура.Вставить("СоздаватьКнопку", Истина);
		
		Структура.Вставить("Имя", "");
		Структура.Вставить("Действие", "");
		Структура.Вставить("ИмяКоманды", "");
		Структура.Вставить("ЭтоГиперссылка", Ложь);
		Структура.Вставить("РодительЭлемента", Неопределено);
		Структура.Вставить("ПередЭлементом", Неопределено);
		Структура.Вставить("Заголовок", "");
		Структура.Вставить("Подсказка", "");
		
		Возврат Структура;
	КонецФункции
	
	Функция СоздатьКомандуПоОписанию(Форма, ОписаниеКоманды) Экспорт 
		Если А1Э_Классы.Класс(ОписаниеКоманды) <> А1Э_Классы.ОписаниеКомандыКнопки() Тогда
			Возврат Неопределено;
		КонецЕсли;
		Если НЕ ОписаниеКоманды.СоздаватьКоманду Тогда
			Возврат Неопределено;
		КонецЕсли;
		Команда = Форма.Команды.Добавить(ОписаниеКоманды.Имя);
		Команда.Заголовок  = ОписаниеКоманды.Заголовок;
		Команда.Подсказка  = ОписаниеКоманды.Подсказка;
		Команда.Действие   = ОписаниеКоманды.Действие;
		
		Возврат Команда;
	КонецФункции
	
	Функция СоздатьКнопкуПоОписанию(Форма, ОписаниеКнопки) Экспорт 
		Если А1Э_Классы.Класс(ОписаниеКнопки) <> А1Э_Классы.ОписаниеКомандыКнопки() Тогда
			Возврат Неопределено;
		КонецЕсли;
		Если НЕ ОписаниеКнопки.СоздаватьКнопку Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		Кнопка = Форма.Элементы.Вставить(ОписаниеКнопки.Имя, Тип("КнопкаФормы"), ЭлементФормы(Форма, ОписаниеКнопки.РодительЭлемента), ЭлементФормы(Форма, ОписаниеКнопки.ПередЭлементом));
		Если НЕ ОписаниеКнопки.СоздаватьКоманду Тогда
			Кнопка.Заголовок = ОписаниеКнопки.Заголовок;
		КонецЕсли;
		Если ОписаниеКнопки.ЭтоГиперссылка = Ложь Тогда
			Если ЭтоКнопкаКоманднойПанели(Форма, ОписаниеКнопки.РодительЭлемента) Тогда
				Кнопка.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
			Иначе
				Кнопка.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
			КонецЕсли;
		Иначе
			Если ЭтоКнопкаКоманднойПанели(Форма, ОписаниеКнопки.РодительЭлемента) Тогда
				Кнопка.Вид = ВидКнопкиФормы.Гиперссылка;
			Иначе
				Кнопка.Вид = ВидКнопкиФормы.ГиперссылкаКоманднойПанели;
			КонецЕсли;
		КонецЕсли;
		Кнопка.ИмяКоманды = ОписаниеКнопки.ИмяКоманды;
		
		
	КонецФункции
	
	Функция ИмяТаблицыПоляФормы(Форма, Знач РодительЭлемента)
		Если РодительЭлемента = Неопределено Тогда
			Возврат "";
		ИначеЕсли ТипЗнч(РодительЭлемента) = Тип("ТаблицаФормы") Тогда
			Возврат РодительЭлемента.Имя;
		ИначеЕсли ТипЗнч(РодительЭлемента) = Тип("УправляемаяФорма") Тогда
			Возврат "";
		Иначе
			РодительКнопки = ЭлементФормы(Форма, РодительЭлемента);
			Возврат ИмяТаблицыПоляФормы(Форма, РодительЭлемента.Родитель);
		КонецЕсли;	
	КонецФункции
	
	Функция ЭтоКнопкаКоманднойПанели(Форма, Знач РодительКнопки) 
		Если РодительКнопки = Неопределено Тогда
			Возврат Ложь;
		ИначеЕсли РодительКнопки = Форма.КоманднаяПанель Тогда
			Возврат Истина;
		ИначеЕсли ТипЗнч(РодительКнопки) = Тип("УправляемаяФорма") Тогда
			Возврат Ложь;
		Иначе
			РодительКнопки = ЭлементФормы(Форма, РодительКнопки);
			Возврат ЭтоКнопкаКоманднойПанели(Форма, РодительКнопки.Родитель);
		КонецЕсли;
	КонецФункции
	
	#КонецОбласти
	
#КонецЕсли
#КонецОбласти 

#Область ВыводТаблицыЗначенийНаФорму_Сервер

#Если Не Клиент Тогда
	Функция ВывестиТаблицуЗначений(Форма, ТаблицаЗначений, ИмяРеквизита, ТаблицаФормы = "Неопределено") Экспорт
		#Если Сервер И НЕ Сервер Тогда
			Форма = ЭтаФорма;
			ТаблицаЗначений = Новый ТаблицаЗначений;
		#КонецЕсли
		#Если Клиент Тогда
			ВызватьИсключение "Программная ошибка - функция должна выполняться #НаСервере!";
		#КонецЕсли
		
		Если ТаблицаФормы = "Неопределено" Тогда
			ТаблицаФормы = Форма.Элементы[ИмяРеквизита];
		КонецЕсли;
		
		УдалитьДочерниеРеквизитыИЭлементы(Форма, ИмяРеквизита, ТаблицаФормы);
		
		Для Каждого Элемент Из Форма.Элементы Цикл
			Если Элемент.Родитель = ТаблицаФормы Тогда
				Если ТипЗнч(Элемент) <> Тип("ПолеФормы") Тогда
					Продолжить;
				КонецЕсли;
				Форма.Элементы.Удалить(Элемент);
			КонецЕсли;
		КонецЦикла;
		
		МассивРеквизитов = Новый Массив;
		Для Каждого Колонка Из ТаблицаЗначений.Колонки Цикл
			ОписаниеТипов = ОписаниеТиповДляРеквизитаФормы(Колонка);
			Если ОписаниеТипов = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			ДобавитьОписаниеРеквизитаИЭлемента(МассивРеквизитов, Колонка.Имя, Колонка.ТипЗначения, ИмяРеквизита, Колонка.Имя,ТаблицаФормы,,Новый Структура("ВыбиратьТип",Ложь),);
		КонецЦикла;
		ДобавитьРеквизитыИЭлементы(Форма, МассивРеквизитов);
		Форма[ИмяРеквизита].Загрузить(ТаблицаЗначений);
	КонецФункции 
	
	Функция ОписаниеТиповДляРеквизитаФормы(Колонка);
		#Если Сервер И НЕ Сервер Тогда
			ТаблицаЗначений = Новый ТаблицаЗначений;
			Колонка = ТаблицаЗначений.Колонки.Добавить("А");		
		#КонецЕсли 
		ОписаниеТипов = Колонка.ТипЗначения;
		Если ОписаниеТипов.СодержитТип(Тип("ТаблицаЗначений")) Тогда
			Возврат Неопределено;
		КонецЕсли;
		Если ОписаниеТипов.СодержитТип(Тип("ХранилищеЗначения")) Тогда
			Возврат Неопределено;
		КонецЕсли;
		Возврат ОписаниеТипов;	
	КонецФункции 
#КонецЕсли

#КонецОбласти

#Область Общее

Функция УдалитьДочерниеРеквизитыИЭлементы(Форма, ИмяРодителя, ТаблицаФормы = "Неопределено") Экспорт
	Если ТаблицаФормы = "Неопределено" Тогда
		ТаблицаФормы = Форма.Элементы[ИмяРодителя];
	КонецЕсли;
	
	МассивРеквизитов = Форма.ПолучитьРеквизиты(ИмяРодителя);
	Если МассивРеквизитов.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	УдалитьРеквизиты(Форма, МассивРеквизитов);
	
	МассивЭлементов = Новый Массив;
	Для Каждого Элемент Из Форма.Элементы Цикл
		Если Элемент.Родитель = ТаблицаФормы Тогда
			Если ТипЗнч(Элемент) <> Тип("ПолеФормы") Тогда
				Продолжить;
			КонецЕсли;
			МассивЭлементов.Добавить(Элемент);
		КонецЕсли;
	КонецЦикла;
	Для Каждого Элемент Из МассивЭлементов Цикл
		Форма.Элементы.Удалить(Элемент);
	КонецЦикла;
	
КонецФункции

Функция УдалитьРеквизиты(Форма, МассивРеквизитов) Экспорт
	МассивПутейКУдалению = Новый Массив;
	Для Каждого Элемент Из МассивРеквизитов Цикл
		МассивПутейКУдалению.Добавить(Элемент.Путь + "." + Элемент.Имя);
	КонецЦикла;
	Форма.ИзменитьРеквизиты(,МассивПутейКУдалению);
КонецФункции

Функция ТипФормы(Форма) Экспорт
	Если ТипЗнч(Реквизит(Форма, "Объект")) = Тип("ДанныеФормыСтруктура") Тогда
		Возврат "ФормаЭлемента";
	ИначеЕсли ТипЗнч(Реквизит(Форма, "Список")) = Тип("ДинамическийСписок") Тогда
		Возврат "ФормаСписка";
	Иначе
		А1Э_Служебный.СлужебноеИсключение("Не удалось определить тип формы!");
	КонецЕсли;
КонецФункции

Функция ОбъектИлиТаблицаФормы(Форма) Экспорт
	ТипФормы = ТипФормы(Форма);
	Если ТипФормы = "ФормаЭлемента" Тогда
		ОбъектИлиТаблицаФормы = Форма.Объект;
	ИначеЕсли ТипФормы = "ФормаСписка" Тогда
		Список = Форма.Элементы.Найти("Список");
		Если Список = Неопределено Тогда
			А1Э_Служебный.СлужебноеИсключение("Не удалось найти элемент <Список> на форме списка!");
		КонецЕсли;
		ОбъектИлиТаблицаФормы = Список;
	КонецЕсли;
	Возврат ОбъектИлиТаблицаФормы;
КонецФункции

Функция Реквизит(Форма, ИмяРеквизита, ПутьКРеквизиту = "") Экспорт
	Если ПутьКРеквизиту <> "" Тогда
		Разделитель = СтрНайти(ПутьКРеквизиту, ".");
		Если Разделитель = 0 Тогда
			ИмяШага = ПутьКРеквизиту;
			ОстатокПути = "";
		Иначе
			ИмяШага = Лев(ПутьКРеквизиту, Разделитель - 1);
			ОстатокПути = Сред(ПутьКРеквизиту, Разделитель + 1);
		КонецЕсли;
		Возврат Реквизит(Форма[ИмяШага], ИмяРеквизита, ОстатокПути);
	Иначе		
		НесуществующееЗначение = А1Э_Классы.НесуществующееЗначение();
		Структура = Новый Структура(ИмяРеквизита, НесуществующееЗначение);
		ЗаполнитьЗначенияСвойств(Структура, Форма);
		Если Структура[ИмяРеквизита] = НесуществующееЗначение Тогда
			Возврат НесуществующееЗначение;
		КонецЕсли;
		Возврат Форма[ИмяРеквизита];
	КонецЕсли;
КонецФункции

Функция ЕстьРеквизит(Форма, ИмяРеквизита, ПутьКРеквизиту = "") Экспорт
	Возврат Реквизит(Форма, ИмяРеквизита, ПутьКРеквизиту) <> А1Э_Классы.НесуществующееЗначение();
КонецФункции

Функция СоздатьРеквизит(Форма, Имя, Знач ОписаниеТипов, ПутьКРеквизиту = Неопределено, Заголовок = Неопределено)
		ОписаниеТипов = А1Э_СтандартныеТипы.ОписаниеТиповПолучить(ОписаниеТипов);
		МассивРеквизитов = Новый Массив;
		МассивРеквизитов.Добавить(Новый РеквизитФормы(Имя, ОписаниеТипов, ПутьКРеквизиту, Заголовок));
		Форма.ИзменитьРеквизиты(МассивРеквизитов);
	КонецФункции

Функция ЭлементФормы(Форма, Идентификатор) Экспорт
	Если ТипЗнч(Идентификатор) = Тип("Строка") Тогда
		Возврат Форма.Элементы.Найти(Идентификатор);
	Иначе
		Возврат Идентификатор;
	КонецЕсли;
КонецФункции

#КонецОбласти

#Область Обработчики

Процедура ПриЧтенииНаСервере(Форма, ТекущийОбъект) Экспорт
	ПолучитьМеханизмы(Форма);
	А1Э_БСП.ПриЧтенииНаСервере(Форма, ТекущийОбъект);   
КонецПроцедуры

Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	ПолучитьМеханизмы(Форма);
	А1Э_БСП.ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);
КонецПроцедуры

Процедура ПриОткрытии(Форма, Отказ) Экспорт
	ПолучитьМеханизмы(Форма);
	А1Э_БСП.ПриОткрытии(Форма, Отказ);
КонецПроцедуры

Процедура ПриАктивизацииСтроки(Форма, Элемент) Экспорт
	ПолучитьМеханизмы(Форма);
	А1Э_БСП.ПриАктивизацииСтроки(Форма, Элемент);
КонецПроцедуры

Процедура ОбработчикКоманд(Форма, Команда) Экспорт 
	ДанныеКоманды = А1Э_Строки.Разделить(Команда.Имя, "__");
	Если ДанныеКоманды[0] = "ПериодическийРеквизитИсторияИзменений" Тогда
		А1Э_ПериодическиеРеквизиты.КомандаИсторииИзменения(Форма, Команда, ДанныеКоманды);
	ИначеЕсли ДанныеКоманды[0] = "ПериодическийРеквизитЗаписатьЗначение" Тогда
		А1Э_ПериодическиеРеквизиты.КомандаЗаписиЗначения(Форма, Команда, ДанныеКоманды);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область Механизмы

Функция ПолучитьМеханизмы(Форма)
	ИмяРеквизита = А1Э_Классы.ДанныеМеханизмов();
	Если Реквизит(Форма, ИмяРеквизита) <> А1Э_Классы.НесуществующееЗначение() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	#Если НЕ Клиент Тогда
		СоздатьРеквизит(Форма, ИмяРеквизита, "");
	#Иначе
		А1Э_ГлобальныйКонтекст.СерверныйВызов("А1Э_Формы.СоздатьРеквизит", А1Э_Массивы.Создать(Форма, ИмяРеквизита, ""));
	#КонецЕсли
	
	ЧастиИмени = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Форма.ИмяФормы, ".");
	ТипОбъекта = ЧастиИмени[0];
	ИмяОбъекта = ЧастиИмени[1];
	МенеджерОбъектов = А1Э_ГлобальныйКонтекст.МенеджерОбъектов(ТипОбъекта);
	Если МенеджерОбъектов = Неопределено Тогда
		А1Э_Служебный.СлужебноеИсключение("Универсальные механизмы форм работают только для справочников и документов!");
	КонецЕсли;
	Попытка
		ДанныеМеханизмов = МенеджерОбъектов[ИмяОбъекта].А1_ДанныеМеханизмов();
	Исключение
		ДанныеМеханизмов = Неопределено;
	КонецПопытки;
	Форма[ИмяРеквизита] = ДанныеМеханизмов;
КонецФункции 

#КонецОбласти

Функция ВыделенаТолькоОднаСтрока(Список) Экспорт
	ВыделенныеСтроки = Список.ВыделенныеСтроки;
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		Сообщить("Необходимо выделить строку в списке!");
		Возврат Ложь;
	ИначеЕсли ВыделенныеСтроки.Количество() > 1 Тогда
		Сообщить("Необходимо выделить только одну строку в списке");
		Возврат Ложь;
	КонецЕсли;
	Возврат Истина;
КонецФункции

#Область БуферОбмена_Клиент
#Если Клиент Тогда
	
	Функция УстановитьТекстВБуферОбмена(Текст, Форма = Неопределено) Экспорт
		#Если ВебКлиент Тогда
			УстановитьТекстВБуферОбменаВВебКлиенте(Текст, Форма);
			Возврат Неопределено;
		#Иначе
			Объект = Новый COMОбъект("htmlfile"); 
			Объект.ParentWindow.ClipboardData.Setdata("Text", Текст);
		#КонецЕсли
	КонецФункции
	
	Функция УстановитьТекстВБуферОбменаВВебКлиенте(Текст, Форма)
		Если ТипЗнч(Форма) <> Тип("УправляемаяФорма") Тогда
			А1Э_Служебный.СлужебноеИсключение("Для работы с буфером обмена в веб-клиенте необходимо передавать форму!");
		КонецЕсли;
		ПолеХТМЛ = Форма.Элементы.Найти("ПолеХТМЛ");
		Если ПолеХТМЛ = Неопределено Или ПолеХТМЛ.Вид <> ВидПоляФормы.ПолеHTMLДокумента Тогда
			А1Э_Служебный.СлужебноеИсключение("Для работы с буфером обмена в веб-клиенте должен быть элемент ПолеХТМЛ вида ПолеHTMLдокумента!");
		КонецЕсли;
		Копир = ПолеХТМЛ.Документ.getElementById("Copier");
		Если Копир = Неопределено Тогда
			А1Э_Служебный.СлужебноеИсключение("Для работы с буфером обмена в веб-клиенте поле HTML должно содержать элемент Копир");
		КонецЕсли;
		Копир.value = Текст;
		Копир.click();
		Копир.value = "";		
	КонецФункции
	
	Функция ПолучитьТекстИзБуфераОбмена(Форма = Неопределено) Экспорт
		#Если ВебКлиент Тогда
			Возврат ПолучитьТекстИзБуфераОбменаВВебКлиенте(Форма)
		#Иначе
			Объект = Новый COMОбъект("htmlfile"); 
			Текст = Объект.ParentWindow.ClipboardData.Getdata("Text");
			Возврат Текст;
		#КонецЕсли
	КонецФункции
	
	Функция ПолучитьТекстИзБуфераОбменаВВебКлиенте(Форма)
		А1Э_Служебный.СлужебноеИсключение("В данные момент получение текста из буфера обмена не поддерживается в веб-клиенте");	
	КонецФункции 
	
#КонецЕсли
#КонецОбласти
	
#Область ПоказФормыВыбора_Клиент
#Если Клиент Тогда
	
	Функция ПоказатьВыбор(Форма, ИмяОбъекта, ИмяПроцедурыДальнейшихДействий) Экспорт
		ВнешнееОповещение = Новый ОписаниеОповещения(ИмяПроцедурыДальнейшихДействий, Форма);
		ВнутреннееОповещение = Новый ОписаниеОповещения("ЗавершитьПоказВыбора", ЭтотОбъект, Новый Структура("ВнешнееОповещение", ВнешнееОповещение));
		ОткрытьФорму(ИмяОбъекта + ".ФормаВыбора", , Форма, , , , ВнутреннееОповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецФункции
	
	Процедура ЗавершитьПоказВыбора(Результат, ДополнительныеПараметры) Экспорт
		Если НЕ ЗначениеЗаполнено(Результат) Тогда
			ВозвращаемоеЗначение = Неопределено;
		КонецЕсли;
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ВнешнееОповещение, Результат);	
	КонецПроцедуры 
	
#КонецЕсли
#КонецОбласти

#Область ЗаписьФормыСПредупреждением_Клиент
#Если Клиент Тогда
	
	Функция ЗаписатьСПредупреждениемПриНеобходимости(Форма, ИмяПроцедурыДальнейшихДействий, Знач ДополнительныеПараметры = Неопределено) Экспорт
		ВнешнееОповещение = Новый ОписаниеОповещения(ИмяПроцедурыДальнейшихДействий, Форма);
		Если ЗначениеЗаполнено(Форма.Объект.Ссылка) И НЕ Форма.Модифицированность Тогда
			ВыполнитьОбработкуОповещения(ВнешнееОповещение, КодВозвратаДиалога.Да);
			Возврат Неопределено;
		КонецЕсли;
		ВнутреннееОповещение = Новый ОписаниеОповещения("ЗавершитьЗаписьСПредупреждением", ЭтотОбъект, Новый Структура("Форма,ВнешнееОповещение,ДополнительныеПараметры", Форма, ВнешнееОповещение, ДополнительныеПараметры));
		ПоказатьВопрос(ВнутреннееОповещение, "Для выполнения операции данные текущей формы будут записаны. Продолжить?", 
		РежимДиалогаВопрос.ДаНет, , , "Предупреждение"); 	
	КонецФункции
	
	Процедура ЗавершитьЗаписьСПредупреждением(Результат, ДополнительныеПараметры) Экспорт
		Если Результат = КодВозвратаДиалога.Да Тогда
			ДополнительныеПараметры.Форма.Записать();
			ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ВнешнееОповещение, Результат);
		КонецЕсли;
	КонецПроцедуры
	
#КонецЕсли 
#КонецОбласти

#Область ОчисткаТЧСПредупреждением_Клиент
#Если Клиент Тогда
	
	Функция ОчиститьТЧСПредупреждениемПриНеобходимости(Форма, ИмяТЧ, ИмяПроцедурыДальнейшихДействий, Знач ДополнительныеПараметры = Неопределено) Экспорт
		ВнешнееОповещение = Новый ОписаниеОповещения(ИмяПроцедурыДальнейшихДействий, Форма);
		Если Форма.Объект[ИмяТЧ].Количество() = 0 Тогда
			ВыполнитьОбработкуОповещения(ВнешнееОповещение, КодВозвратаДиалога.Да);
			Возврат Неопределено;
		КонецЕсли;
		ВнутреннееОповещение = Новый ОписаниеОповещения("ЗавершитьОчисткуТЧСПредупреждением", ЭтотОбъект, Новый Структура("Форма,ИмяТЧ,ВнешнееОповещение,ДополнительныеПараметры", Форма, ИмяТЧ, ВнешнееОповещение, ДополнительныеПараметры));
		Если А1Э_Структуры.ЗначениеСвойства(ДополнительныеПараметры, "СинонимТЧ") = Неопределено Тогда
			СинонимТЧ = ИмяТЧ;
		Иначе
			СинонимТЧ = ДополнительныеПараметры.СинонимТЧ;
		КонецЕсли;
		Если А1Э_Структуры.ЗначениеСвойства(ДополнительныеПараметры, "ШаблонТекста") = Неопределено Тогда
			ШаблонТекста = "Для выполнения операции табличная часть ""[СинонимТЧ]"" будет очищена. Продолжить?";
		Иначе
			ШаблонТекста = ДополнительныеПараметры.ШаблонТекста;
		КонецЕсли;
		ПоказатьВопрос(ВнутреннееОповещение, 
		А1Э_Строки.ПоШаблону(ШаблонТекста, Новый Структура("СинонимТЧ", СинонимТЧ)),
		РежимДиалогаВопрос.ДаНет, , , "Предупреждение"); 
	КонецФункции
	
	Процедура ЗавершитьОчисткуТЧСПредупреждением(Результат, ДополнительныеПараметры) Экспорт
		Если Результат = КодВозвратаДиалога.Да Тогда
			Если А1Э_Структуры.ЗначениеСвойства(ДополнительныеПараметры.ДополнительныеПараметры, "НеВыполнятьОчистку") <> Истина Тогда
				ДополнительныеПараметры.Форма.Объект[ДополнительныеПараметры.ИмяТЧ].Очистить();
			КонецЕсли;
			ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ВнешнееОповещение, Результат);
		КонецЕсли;
	КонецПроцедуры
	
#КонецЕсли 
#КонецОбласти 

