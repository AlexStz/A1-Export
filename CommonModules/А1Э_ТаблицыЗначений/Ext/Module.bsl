#Область Декларации

Функция НовыйСтруктураКолонки(Имя)
	Структура = Новый Структура("Имя,МассивТипов",Имя, Новый Массив);
	Возврат Структура;
КонецФункции

Функция НовыйКонвертация(Имя, ИсточникДанных, РеквизитПоиска, ПроверятьУникальность = Истина, ПроверятьЗаполненность = Истина, КолонкаРезультат, СтрокаСоединения = "") Экспорт
	Структура = Новый Структура("Имя,ИсточникДанных,РеквизитПоиска,ПроверятьУникальность,ПроверятьЗаполненность,КолонкаРезультат,СтрокаСоединения", 
	Имя, ИсточникДанных, РеквизитПоиска, ПроверятьУникальность, ПроверятьЗаполненность, КолонкаРезультат, СтрокаСоединения);
	Возврат Структура;
КонецФункции

#КонецОбласти 

#Область ИнтерфейсМассиваСтруктур

Функция НовыйТаблицаЗначений() Экспорт 
	#Если НЕ Клиент Тогда
		Возврат Новый ТаблицаЗначений;
	#Иначе
		Возврат Новый Массив;
	#КонецЕсли
КонецФункции

Функция ДобавитьКолонку(Таблица, Имя, ОписаниеТипов) Экспорт
	#Если Сервер Или ВнешнееСоединение Тогда
		Если ТипЗнч(Таблица) = Тип("ТаблицаЗначений") Тогда
			Возврат Таблица.Колонки.Добавить();
		КонецЕсли;
	#КонецЕсли
	
	Для Каждого Структура Из Таблица Цикл
		Структура.Вставить(Имя, А1Э_СтандартныеТипы.ПустоеЗначение(ОписаниеТипов));
	КонецЦикла;
КонецФункции

Функция ВМассивСтруктур(ТаблицаЗначений) Экспорт
	#Если Клиент Тогда
	А1Э_Служебный.СлужебноеИсключение("Конвертация таблицы значений в массив структур доступна только на сервере!");	
	#КонецЕсли
	
	#Если Сервер ИЛИ ВнешнееСоединение Тогда
		#Если Сервер И НЕ Сервер Тогда
			ТаблицаЗначений = Новый ТаблицаЗначений;		
		#КонецЕсли
		
		МассивСтруктур = Новый Массив;
		
		Для Каждого Строка Из ТаблицаЗначений Цикл
			СтруктураСтроки = Новый Структура;
			Для Каждого Колонка Из ТаблицаЗначений.Колонки Цикл
				СтруктураСтроки.Вставить(Колонка.Имя, Строка[Колонка.Имя]);
			КонецЦикла;
			МассивСтруктур.Добавить(СтруктураСтроки);
		КонецЦикла;
		
		Возврат МассивСтруктур;
	#КонецЕсли
КонецФункции

Функция ВТаблицуЗначений(МассивСтруктур, ГлубокийАнализ = Истина) Экспорт
	#Если Клиент Тогда
	А1Э_Служебный.СлужебноеИсключение("Конвертация массива структур в таблицу значений доступна только на сервере!");	
	#КонецЕсли

	#Если Сервер ИЛИ ВнешнееСоединение Тогда
		#Если Сервер И НЕ Сервер Тогда
			МассивСтруктур = Новый Массив;		
		#КонецЕсли
		
		ТаблицаЗначений = Новый ТаблицаЗначений;
		СоздатьКолонкиПоМассивуСтруктур(ТаблицаЗначений, МассивСтруктур, ГлубокийАнализ);
		
		Для Каждого Структура Из МассивСтруктур Цикл
			Строка = ТаблицаЗначений.Добавить();
			ЗаполнитьЗначенияСвойств(Строка, Структура);
		КонецЦикла;
		
		Возврат ТаблицаЗначений;
	#КонецЕсли
	
КонецФункции

Функция НайтиСтроки(Таблица, СтруктураОтбора) Экспорт 
	#Если НЕ Клиент Тогда
		Если ТипЗнч(Таблица) = Тип("ТаблицаЗначений") Тогда
			Возврат Таблица.НайтиСтроки(СтруктураОтбора);
		КонецЕсли;
	#КонецЕсли
	Результат = Новый Массив;
	Для Каждого Структура Из Таблица Цикл
		Подходит = Истина;
		Для Каждого Пара Из СтруктураОтбора Цикл
			Если Структура[Пара.Ключ] <> Пара.Значение Тогда
				Подходит = Ложь;
			КонецЕсли;
		КонецЦикла;
		Если Подходит Тогда
			Результат.Добавить(Структура);
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
КонецФункции

Функция НайтиСтроку(МассивСтруктур, ИмяКолонки, Значение) Экспорт
	СтруктураОтбора = Новый Структура(ИмяКолонки, Значение);
	
	МассивНайденныхСтрок = НайтиСтроки(МассивСтруктур, СтруктураОтбора);
	
	Возврат А1Э_Массивы.ЕдинственныйЭлемент(МассивНайденныхСтрок); 
КонецФункции

Функция УдалитьСтроки(Таблица, Знач МассивИндексов) Экспорт 
	МассивИндексов = А1Э_Массивы.Массив(МассивИндексов);	
	А1Э_Массивы.Сортировать(МассивИндексов);
	
	Сч = -1;
	СчУдаления = 0;
	Пока Сч < МассивИндексов.Количество() - 1 Цикл
		Сч = Сч + 1;
		Индекс = МассивИндексов[Сч];
		Таблица.Удалить(Индекс - СчУдаления);
		СчУдаления = СчУдаления + 1;
	КонецЦикла;
КонецФункции

#КонецОбласти

#Если Сервер ИЛИ ВнешнееСоединение Тогда
	
	Функция СоздатьКолонкиПоМассивуСтруктур(ТаблицаЗначений, МассивСтруктур, ГлубокийАнализ = Истина)
		Если ГлубокийАнализ Тогда
			МассивАнализа = МассивСтруктур;
		Иначе
			МассивАнализа = А1Э_Массивы.Создать(МассивСтруктур[0]);
		КонецЕсли;
		#Если Сервер И НЕ Сервер Тогда
			МассивАнализа = Новый Массив;		
		#КонецЕсли
		
		СтруктурыКолонок = Новый Соответствие;
		Для Каждого Структура Из МассивАнализа Цикл
			#Если Сервер И НЕ Сервер Тогда
				Структура = Новый Структура;		
			#КонецЕсли 
			Для Каждого Пара Из Структура Цикл
				Записывать = Ложь;
				СтруктураКолонки = СтруктурыКолонок[Пара.Ключ];
				Если СтруктураКолонки = Неопределено Тогда
					СтруктураКолонки = НовыйСтруктураКолонки(Пара.Ключ);
					СтруктурыКолонок.Вставить(Пара.Ключ, СтруктураКолонки);
				КонецЕсли;
				Тип = ТипЗнч(Пара.Значение);
				Если СтруктураКолонки.МассивТипов.Найти(Тип) = Неопределено Тогда
					СтруктураКолонки.МассивТипов.Добавить(Тип);
				КонецЕсли;
			КонецЦикла
		КонецЦикла;
		Для Каждого Пара Из СтруктурыКолонок Цикл
			ТаблицаЗначений.Колонки.Добавить(Пара.Значение.Имя, Новый ОписаниеТипов(Пара.Значение.МассивТипов,,,Новый КвалификаторыЧисла(30,10),Новый КвалификаторыСтроки(200)));
		КонецЦикла;
	КонецФункции 
	
	Функция Конвертировать(ТаблицаЗначений, МассивКонвертаций) Экспорт  
		МассивТекстов = Новый Массив;
		ИмяВременнойТаблицы = "Таблица";
		МассивТекстов.Добавить(ТекстЗапросаПомещенияВоВременнуюТаблицу(ТаблицаЗначений, ИмяВременнойТаблицы));
		МассивТекстов.Добавить(ТекстЗапросаКонвертацииИзВременнойТаблицы(ТаблицаЗначений, МассивКонвертаций, ИмяВременнойТаблицы));
		
		Запрос = Новый Запрос;
		Запрос.Текст = СтрСоединить(МассивТекстов, ";" + Символы.ПС);
		Запрос.УстановитьПараметр(ИмяВременнойТаблицы, ТаблицаЗначений);
		
		Возврат Запрос.Выполнить().Выгрузить();
	КонецФункции
	
	Функция КонвертироватьКолонкуВЧисло(ТаблицаЗначений, ИмяКолонки) 
		#Если Сервер И НЕ Сервер Тогда
			ТаблицаЗначений = Новый ТаблицаЗначений;		
		#КонецЕсли
		Колонка = ТаблицаЗначений.Колонки[ИмяКолонки];
		ИмяВременнойКолонки = ПолучитьИмяВременнойКолонки(ТаблицаЗначений, ИмяКолонки);
		ТаблицаЗначений.Колонки.Добавить(ИмяВременнойКолонки, А1Э_Числа.ОписаниеТипа(30,10), Колонка.Заголовок, Колонка.Ширина);
		Сч = -1;
		Пока Сч < ТаблицаЗначений.Количество() - 1 Цикл
			Сч = Сч + 1;
			Строка = ТаблицаЗначений[Сч];
			СтроковоеЗначение = Строка[ИмяКолонки];
			СтроковоеЗначение = СтрЗаменить(СтрЗаменить(СтроковоеЗначение, " ",""), Символы.НПП, "");
			Попытка
				Строка[ИмяВременнойКолонки] = Число(СтроковоеЗначение);
			Исключение
				Строка[ИмяВременнойКолонки] = 0;
			КонецПопытки;
		КонецЦикла;
		ТаблицаЗначений.Колонки.Удалить(ИмяКолонки);
		ТаблицаЗначений.Колонки[ИмяВременнойКолонки].Имя = ИмяКолонки;
	КонецФункции
	
	Функция ПолучитьИмяВременнойКолонки(ТаблицаЗначений, ИмяКолонки) Экспорт 
		#Если Сервер И НЕ Сервер Тогда
			ТаблицаЗначений = Новый ТаблицаЗначений;		
		#КонецЕсли 
		Суффикс = "_Временная";
		Сч = -1;
		Пока ИСТИНА Цикл
			Сч = Сч + 1;
			ИмяВременнойКолонки = ИмяКолонки + Суффикс + А1Э_Строки.ВСтроку(Сч);
			Если ТаблицаЗначений.Колонки.Найти(ИмяВременнойКолонки) = Неопределено Тогда
				Возврат ИмяВременнойКолонки;
			КонецЕсли;
		КонецЦикла;
	КонецФункции 
	
	Функция ПроверитьКонвертации(ТаблицаЗначений, МассивКонвертаций) Экспорт
		Для Каждого Конвертация Из МассивКонвертаций Цикл
			Если Конвертация.ПроверятьЗаполненность Тогда
				Заполненность = Истина;
				Для Каждого Строка Из ТаблицаЗначений Цикл
					Если ЗначениеЗаполнено(Строка[Конвертация.Имя]) И НЕ ЗначениеЗаполнено(Строка[Конвертация.КолонкаРезультат]) Тогда
						Сообщить("В строке № " + Строка.НомерСтрокиА1 + " не удалось заполнить колонку " + Конвертация.КолонкаРезультат);
						Заполненность = Ложь;
					КонецЕсли;
				КонецЦикла;
				Если Заполненность Тогда
					Сообщить("В конвертации " + Конвертация.КолонкаРезультат + " все значения заполнены!");
				КонецЕсли;
			КонецЕсли;
			Если Конвертация.ПроверятьУникальность Тогда
				Уникальность = Истина;
				Для Каждого Строка Из ТаблицаЗначений Цикл
					Если ЗначениеЗаполнено(Строка[Конвертация.Имя]) И Строка[Конвертация.КолонкаРезультат] = "%НЕУНИКАЛЬНОЕЗНАЧЕНИЕ%" Тогда
						Сообщить("В строке № " + Строка.НомерСтрокиА1 + " не удалось однозначно определить " + Конвертация.КолонкаРезультат);
						Уникальность = Ложь;	
					КонецЕсли;
				КонецЦикла;
				Если Уникальность Тогда
					Сообщить("В конвертации " + Конвертация.КолонкаРезультат + " все значения уникальны!");
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецФункции
	
	Функция КонвертироватьКолонкиВЧисла(ТаблицаЗначений, ИменаКолонок) Экспорт
		МассивКолонок = А1Э_Массивы.Массив(ИменаКолонок);
		Для Каждого Элемент Из МассивКолонок Цикл
			КонвертироватьКолонкуВЧисло(ТаблицаЗначений, Элемент);
		КонецЦикла;
	КонецФункции
	
	Функция ИзменитьСоставСтрок(ТаблицаЗначений, ИсточникДанных, ВедущиеРеквизиты, СуммируемыйРеквизит, ПропорциональныеРеквизиты) Экспорт
		#Если Сервер И НЕ Сервер Тогда
			ТаблицаЗначений = Новый ТаблицаЗначений;		
		#КонецЕсли
		МассивВедущихРеквизитов = А1Э_Массивы.Массив(ВедущиеРеквизиты);
		МассивПропорциональныхРеквизитов = А1Э_Массивы.Массив(МассивПропорциональныхРеквизитов);
		
		
		
		Для Каждого Элемент Из ИсточникДанных Цикл
			ИзменитьСоставСтрокПоЭлементу(ТаблицаЗначений, Элемент,  МассивВедущихРеквизитов, СуммируемыйРеквизит, МассивПропорциональныхРеквизитов);
		КонецЦикла;
	КонецФункции
	
	Функция ИзменитьСоставСтрокПоЭлементу(ТаблицаЗначений, Элемент,  МассивВедущихРеквизитов, СуммируемыйРеквизит, МассивПропорциональныхРеквизитов) Экспорт
		ИзменениеСуммируемогоРеквизита = Элемент[СуммируемыйРеквизит];
		СтруктураОтбора = Новый Структура;
		Для Каждого ВедущийРеквизит Из МассивВедущихРеквизитов Цикл
			СтруктураОтбора.Вставить(ВедущийРеквизит);
		КонецЦикла;
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, Элемент);
		
		Строки = ТаблицаЗначений.НайтиСтроки(СтруктураОтбора);
		Если Строки.Количество() = 0 Тогда
			Строка = ТаблицаЗначений.Добавить();
			ЗаполнитьЗначенияСвойств(Строка, ТаблицаЗначений[0]);
			ЗаполнитьЗначенияСвойств(Строка, СтруктураОтбора);
			Строка[СуммируемыйРеквизит] = ИзменениеСуммируемогоРеквизита;
			Для Каждого ПропорциональныйРеквизит Из МассивПропорциональныхРеквизитов Цикл
				Строка[ПропорциональныйРеквизит] = ИзменениеСуммируемогоРеквизита;
			КонецЦикла;
			Возврат Строка;
		Иначе
			Строка = Строки[0];
			Если (Строка[СуммируемыйРеквизит] > 0 И ИзменениеСуммируемогоРеквизита > 0) 
				ИЛИ (Строка[СуммируемыйРеквизит] < 0 И ИзменениеСуммируемогоРеквизита) < 0 Тогда
				Строка = ТаблицаЗначений.Добавить();
				ЗаполнитьЗначенияСвойств(Строка, ТаблицаЗначений[0]);
				ЗаполнитьЗначенияСвойств(Строка, СтруктураОтбора);
				Строка[СуммируемыйРеквизит] = ИзменениеСуммируемогоРеквизита;
				Для Каждого ПропорциональныйРеквизит Из МассивПропорциональныхРеквизитов Цикл
					Строка[ПропорциональныйРеквизит] = ИзменениеСуммируемогоРеквизита;
				КонецЦикла;
				Возврат Строка;
			Иначе
				ИсходноеЗначение = ИзменениеСуммируемогоРеквизита;
				Пока Истина Цикл
					Если А1Э_Числа.Модуль(Строка[СуммируемыйРеквизит]) > А1Э_Числа.Модуль(ИзменениеСуммируемогоРеквизита) Тогда
						ИзменитьСПропорцией(Строка, СуммируемыйРеквизит, ИзменениеСуммируемогоРеквизита, МассивПропорциональныхРеквизитов);
						ИзменениеСуммируемогоРеквизита = 0;
					Иначе
						ИзменениеСуммируемогоРеквизита = ИзменениеСуммируемогоРеквизита + Строка[СуммируемыйРеквизит];
						ТаблицаЗначений.Удалить(Строка);
						Строки.Удалить(0);
						Если Строки.Количество() = 0 Тогда
							Прервать;
						Иначе
							Строка = Строки[0];
						КонецЕсли;
					КонецЕсли;
					Если ИзменениеСуммируемогоРеквизита >= 0 Тогда
						Возврат Строка;
						Прервать;
					КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
	КонецФункции 
	
	Функция ИзменитьСПропорцией(Строка, ИмяРеквизита, ИзменениеРеквизита, МассивПропорциональныхРеквизитов)
		Пропорция = 1 + ИзменениеРеквизита/Строка[ИмяРеквизита];
		Строка[ИмяРеквизита] = Строка[ИмяРеквизита] + ИзменениеРеквизита;
		Для Каждого Имя Из МассивПропорциональныхРеквизитов Цикл
			Строка[Имя] = Строка[Имя] * Пропорция;
		КонецЦикла;
	КонецФункции 
#КонецЕсли

Функция ТекстЗапросаПомещенияВоВременнуюТаблицу(ТаблицаЗначений, ИмяВременнойТаблицы = "ВТ") Экспорт
	СтруктураЗапроса = А1Э_Запросы.НовыйСтруктураЗапроса(,ИмяВременнойТаблицы);

	ИсточникДанных = А1Э_Запросы.НовыйИсточникДанныхЗапроса("Таблица", "&" + ИмяВременнойТаблицы);
	А1Э_Запросы.ДобавитьИсточникДанных(СтруктураЗапроса, ИсточникДанных);
	
	МассивПолей = Новый Массив;
	Для Каждого Колонка Из ТаблицаЗначений.Колонки Цикл
		МассивПолей.Добавить(Колонка.Имя);
	КонецЦикла;
	А1Э_Запросы.ДобавитьПоля(СтруктураЗапроса, МассивПолей);
	
	Возврат А1Э_Запросы.ТекстЗапросаИзСтруктуры(СтруктураЗапроса);
КонецФункции

Функция ТекстЗапросаКонвертацииИзВременнойТаблицы(ТаблицаЗначений, МассивКонвертаций, ИмяВременнойТаблицы) Экспорт
	#Если Сервер И НЕ Сервер Тогда
		ТаблицаЗначений = Новый ТаблицаЗначений;
		МассивКонвертаций = Новый Массив;
	#КонецЕсли
	
	СтруктураЗапроса = А1Э_Запросы.НовыйСтруктураЗапроса("ВЫБРАТЬ РАЗРЕШЕННЫЕ");
	
	ИмяОсновнойТаблицы = "Таблица";
	ОсновнаяТаблица = А1Э_Запросы.НовыйИсточникДанныхЗапроса(ИмяОсновнойТаблицы, ИмяВременнойТаблицы);
	А1Э_Запросы.ДобавитьИсточникДанных(СтруктураЗапроса, ОсновнаяТаблица);
	
	МассивИменКонвертаций = Новый Массив;
	Для Каждого Конвертация Из МассивКонвертаций Цикл
		Если ТаблицаЗначений.Колонки.Найти(Конвертация.Имя) = Неопределено Тогда
			Сообщить("Для конвертации " + Конвертация.Имя + " не найден источник данных в конвертируемой таблице!");
			Продолжить;
		КонецЕсли;
		
		ИмяКонвертации = Конвертация.КолонкаРезультат;
		Если МассивИменКонвертаций.Найти(ИмяКонвертации) <> Неопределено Тогда
			А1Э_Служебный.СлужебноеИсключение("Дублирование имен конвертаций!");
		КонецЕсли;
		МассивИменКонвертаций.Добавить(ИмяКонвертации);
		
		ИмяИсточникаДанных = "Конвертация_" + Конвертация.Имя;
		ИсточникДанных = А1Э_Запросы.НовыйИсточникДанныхЗапроса(ИмяИсточникаДанных, Конвертация.ИсточникДанных);
		А1Э_Запросы.ДобавитьИсточникДанных(СтруктураЗапроса, ИсточникДанных);
		
		А1Э_Запросы.ДобавитьПоля(СтруктураЗапроса, 
		А1Э_Запросы.НовыйПолеЗапроса(ИмяКонвертации, А1Э_Запросы.УникальноеЗначение(ИмяИсточникаДанных + ".Ссылка"), "ВТексте"));
		
		Если Конвертация.СтрокаСоединения <> "" Тогда
			СтрокаСоединения = Конвертация.СтрокаСоединения;
			СтрокаСоединения = СтрЗаменить(СтрокаСоединения, "&ОсновнаяТаблица", ИмяОсновнойТаблицы);
			СтрокаСоединения = СтрЗаменить(СтрокаСоединения, "&ИсточникДанных", ИмяИсточникаДанных);
		Иначе
			СтрокаСоединения = ИмяОсновнойТаблицы + "." + Конвертация.Имя + " = " + ИмяИсточникаДанных + "." + Конвертация.РеквизитПоиска; 
		КонецЕсли;	
		А1Э_Запросы.ДобавитьСоединение(ОсновнаяТаблица, 
		А1Э_Запросы.НовыйСоединениеЗапроса(ИмяИсточникаДанных, "ЛЕВОЕ", СтрокаСоединения));
		
	КонецЦикла;
	
	МассивПолей = Новый Массив;
	Для Каждого Колонка Из ТаблицаЗначений.Колонки Цикл
		Если МассивИменКонвертаций.Найти(Колонка.Имя) = Неопределено Тогда
			МассивПолей.Добавить(Колонка.Имя);
		КонецЕсли;
	КонецЦикла;
	А1Э_Запросы.ДобавитьПоля(СтруктураЗапроса, МассивПолей);

	Возврат А1Э_Запросы.ТекстЗапросаИзСтруктуры(СтруктураЗапроса);
КонецФункции 