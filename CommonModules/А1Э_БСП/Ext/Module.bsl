#Область СведенияОВнешнейОбработке

#Если Сервер Или ВнешнееСоединение Тогда
	
	Функция СведенияОВнешнейОбработке(ОбработкаОбъект, ОсновныеПараметры) Экспорт
		ПолныеОсновныеПараметры = ПолныеОсновныеПараметры(ОбработкаОбъект, ОсновныеПараметры);
		
		ПараметрыРегистрации = Новый Структура;
		
		ПараметрыРегистрации.Вставить("Вид", ПолныеОсновныеПараметры.Вид);  
		ПараметрыРегистрации.Вставить("Наименование", ПолныеОсновныеПараметры.Наименование);
		ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
		ПараметрыРегистрации.Вставить("Версия", ПолныеОсновныеПараметры.Версия); 
		ПараметрыРегистрации.Вставить("Информация", "Дополнительная обработка """ + ПолныеОсновныеПараметры.Наименование +"""."); 
		
		ТаблицаКоманд = ПолучитьТаблицуКоманд();
		Если НЕ ПолныеОсновныеПараметры.Свойство("Команды") Тогда 
			ДобавитьКоманду(ТаблицаКоманд, ПолныеОсновныеПараметры.Наименование, ПолныеОсновныеПараметры.Идентификатор,
			ПолныеОсновныеПараметры.Использование, Истина, ПолныеОсновныеПараметры.Модификатор);
		Иначе
			Для Каждого ОписаниеКоманды Из ПолныеОсновныеПараметры.Команды Цикл
				Команда = ДобавитьКоманду(ТаблицаКоманд, ПолныеОсновныеПараметры.Наименование, ПолныеОсновныеПараметры.Идентификатор,
				ПолныеОсновныеПараметры.Использование, Истина, ПолныеОсновныеПараметры.Модификатор);
				ЗаполнитьЗначенияСвойств(Команда, ОписаниеКоманды);
			КонецЦикла;
		КонецЕсли;
		
		ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
		
		Если ПолныеОсновныеПараметры.Свойство("Назначение") Тогда
			ПараметрыРегистрации.Вставить("Назначение", А1Э_Массивы.Массив(ПолныеОсновныеПараметры.Назначение));
		КонецЕсли;
		Возврат ПараметрыРегистрации;
	КонецФункции
	
	Функция ПолныеОсновныеПараметры(ОбработкаОбъект, ОсновныеПараметры) Экспорт
		ПолныеОсновныеПараметры = А1Э_Структуры.Скопировать(ОсновныеПараметры);
		ПолныеОсновныеПараметры.Вставить("Идентификатор", ОбработкаОбъект.Метаданные().Имя);
		ПолныеОсновныеПараметры.Вставить("Наименование", ОбработкаОбъект.Метаданные().Синоним);
		
		Если НЕ ПолныеОсновныеПараметры.Свойство("Версия") Тогда
			ПолныеОсновныеПараметры.Вставить("Версия", "1.0");
		КонецЕсли;
		Если НЕ ПолныеОсновныеПараметры.Свойство("Использование") Тогда
			ПолныеОсновныеПараметры.Вставить("Использование", "ВызовСерверногоМетода");
		КонецЕсли;
				
		Если ОсновныеПараметры.Вид = "ПечатьMXL" Тогда
			ПолныеОсновныеПараметры.Вставить("Модификатор", ОсновныеПараметры.Вид);
			ПолныеОсновныеПараметры.Вид = "ПечатнаяФорма";
		Иначе
			ПолныеОсновныеПараметры.Вставить("Модификатор", "");
		КонецЕсли;

		Возврат ПолныеОсновныеПараметры;
	КонецФункции
	
	Функция ПолучитьТаблицуКоманд()
		Команды = Новый ТаблицаЗначений;
		Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));//как будет выглядеть описание печ.формы для пользователя
		Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка")); //имя макета печ.формы
		Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка")); //ВызовСерверногоМетода
		Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
		Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
		Возврат Команды;
	КонецФункции
	
	Функция ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
		
		НоваяКоманда = ТаблицаКоманд.Добавить();
		НоваяКоманда.Представление = Представление; 
		НоваяКоманда.Идентификатор = Идентификатор;
		НоваяКоманда.Использование = Использование;
		НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
		НоваяКоманда.Модификатор = Модификатор;
		Возврат НоваяКоманда; 
	КонецФункции
	
#КонецЕсли

#Область КодВнешнейОбработки
	//Функция ОсновныеПараметры()
	//	ОсновныеПараметры = Новый Структура;
	//	ОсновныеПараметры.Вставить("Вид", "ПечатнаяФорма");
	//	ОсновныеПараметры.Вставить("Модификатор", "ПечатьMXL");
	//	ОсновнаеПараметры.Вставить()
	//	Возврат ОсновныеПараметры;
	//КонецФункции 
	//
	//Функция СведенияОВнешнейОбработке() Экспорт
	//	ПараметрыРегистрации = А1Э_БСП.СведенияОВнешнейОбработке(ЭтотОбъект, ОсновныеПараметры());
	//	
	//	Возврат ПараметрыРегистрации;
	//КонецФункции 
#КонецОбласти

#КонецОбласти 

#Область СозданиеНаОсновании

Функция ДобавитьКомандуСозданияНаОсновании(КомандыСозданияНаОсновании, Идентификатор, ИмяИлиОбъектМетаданных, Представление = Неопределено, ДополнительныеДанные = Неопределено) Экспорт
	Если ТипЗнч(ИмяИлиОбъектМетаданных) = Тип("Строка") Тогда
		РабочееИмя = ИмяИлиОбъектМетаданных;
		Если Представление = Неопределено Тогда
			А1Э_Служебный.СлужебноеИсключение("При указании имени строкой необходимо явно указывать представление");
		КонецЕсли;
		РабочееПредставление = Представление;
	Иначе
		РабочееИмя = ИмяИлиОбъектМетаданных.ПолноеИмя;
		РабочееПредставление = ИмяИлиОбъектМетаданных.Синоним;
	КонецЕсли;
	
	КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
	КомандаСоздатьНаОсновании.Идентификатор = Идентификатор;
	КомандаСоздатьНаОсновании.Представление = РабочееПредставление;
	КомандаСоздатьНаОсновании.Обработчик = "А1Э_БСП.СоздатьНаОсновании";
	КомандаСоздатьНаОсновании.ДополнительныеПараметры = Новый Структура("А1_ИмяСоздаваемогоОбъекта", РабочееИмя);
	КомандаСоздатьНаОсновании.МножественныйВыбор = Ложь;
	Если ДополнительныеДанные <> Неопределено Тогда 
		ЗаполнитьЗначенияСвойств(КомандаСоздатьНаОсновании, ДополнительныеДанные);
	КонецЕсли;
	
КонецФункции

Функция СоздатьНаОсновании(Ссылка, ПараметрыВыполнения) Экспорт 
	#Если Сервер Или ВнешнееСоединение Тогда
		А1Э_Служебный.СлужебноеИсключение("Функция выполняется на клиенте");
	#Иначе
		ИмяСоздаваемогоОбъекта = А1Э_Структуры.ЗначениеСвойства(ПараметрыВыполнения.ОписаниеКоманды.ДополнительныеПараметры, "А1_ИмяСоздаваемогоОбъекта");
		Если ИмяСоздаваемогоОбъекта = Неопределено Тогда
			А1Э_Служебный.СлужебноеИсключение("Не определено имя создаваемого объекта в команде создания на основании!");
		КонецЕсли;
		ОткрытьФорму(ИмяСоздаваемогоОбъекта + ".ФормаОбъекта", Новый Структура("Основание", Ссылка));  
	#КонецЕсли	
КонецФункции

#КонецОбласти

#Область ПроцедурыБСП

Функция ТекущийПользователь() Экспорт
	Попытка
		Модуль_Пользователи = Вычислить("Пользователи");
	Исключение
		А1Э_Служебный.СлужебноеИсключение("В конфигурации отсутствует модуль <Пользователи>. Возможно БСП не внедрена или внедрена неправильно!");
	КонецПопытки;
	
	Возврат Модуль_Пользователи.ТекущийПользователь();
КонецФункции 

Функция РежимОтладки() Экспорт
	//ТУДУ: сделать проверку существования БСП без режима отладки.
	//ТУДУ2: сделать свой механизм хранения данных о режиме отладки.
	Попытка
		Модуль_ОбщегоНазначенияКлиентСервер = Вычислить("ОбщегоНазначенияКлиентСервер");
	Исключение
		Возврат Ложь;
	КонецПопытки;
	Возврат Модуль_ОбщегоНазначенияКлиентСервер.РежимОтладки() = Истина;
КонецФункции

#КонецОбласти 
