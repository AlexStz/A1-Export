#Область СведенияОВнешнейОбработке

#Если Сервер Или ВнешнееСоединение Тогда
	
	Функция СведенияОВнешнейОбработке(ОбработкаОбъект, ОсновныеПараметры) Экспорт
		ПолныеОсновныеПараметры = ПолныеОсновныеПараметры(ОбработкаОбъект, ОсновныеПараметры);
		
		ПараметрыРегистрации = Новый Структура;
		
		ПараметрыРегистрации.Вставить("Вид", ПолныеОсновныеПараметры.Вид);  
		ПараметрыРегистрации.Вставить("Наименование", ПолныеОсновныеПараметры.Наименование);
		ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
		ПараметрыРегистрации.Вставить("Версия", ПолныеОсновныеПараметры.Версия); 
		ПараметрыРегистрации.Вставить("Информация", "Дополнительная обработка """ + ПолныеОсновныеПараметры.Наименование +"""."); 
		
		ТаблицаКоманд = ПолучитьТаблицуКоманд();
		ДобавитьКоманду(ТаблицаКоманд, ПолныеОсновныеПараметры.Наименование, ПолныеОсновныеПараметры.Идентификатор,
		ПолныеОсновныеПараметры.Использование, Истина, ПолныеОсновныеПараметры.Модификатор);
		
		ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
		
		МассивНазначений = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПолныеОсновныеПараметры.Объекты,",");
		ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
		
		Возврат ПараметрыРегистрации;
	КонецФункции
	
	Функция ПолныеОсновныеПараметры(ОбработкаОбъект, ОсновныеПараметры)
		ПолныеОсновныеПараметры = А1Э_Структуры.Скопировать(ОсновныеПараметры);
		ПолныеОсновныеПараметры.Вставить("Идентификатор", ОбработкаОбъект.Метаданные().Имя);
		ПолныеОсновныеПараметры.Вставить("Наименование", ОбработкаОбъект.Метаданные().Синоним);
		Если ОсновныеПараметры.Вид = "ПечатьMXL" Тогда
			ПолныеОсновныеПараметры.Вставить("Модификатор", ОсновныеПараметры.Вид);
			ПолныеОсновныеПараметры.Вид = "ПечатнаяФорма";
		Иначе
			ПолныеОсновныеПараметры.Вставить("Модификатор", "");
		КонецЕсли;
		Возврат ПолныеОсновныеПараметры;
	КонецФункции
	
	Функция ПолучитьТаблицуКоманд()
		Команды = Новый ТаблицаЗначений;
		Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));//как будет выглядеть описание печ.формы для пользователя
		Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка")); //имя макета печ.формы
		Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка")); //ВызовСерверногоМетода
		Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
		Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
		Возврат Команды;
	КонецФункции
	
	Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
		
		НоваяКоманда = ТаблицаКоманд.Добавить();
		НоваяКоманда.Представление = Представление; 
		НоваяКоманда.Идентификатор = Идентификатор;
		НоваяКоманда.Использование = Использование;
		НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
		НоваяКоманда.Модификатор = Модификатор;
		
	КонецПроцедуры
	
#КонецЕсли

#Область КодВнешнейОбработки
	//Функция ОсновныеПараметры()
	//	ОсновныеПараметры = Новый Структура;
	//	ОсновныеПараметры.Вставить("Вид", "ПечатнаяФорма");
	//	ОсновныеПараметры.Вставить("Модификатор", "ПечатьMXL");
	//	ОсновнаеПараметры.Вставить()
	//	Возврат ОсновныеПараметры;
	//КонецФункции 
	//
	//Функция СведенияОВнешнейОбработке() Экспорт
	//	ПараметрыРегистрации = А1Э_БСП.СведенияОВнешнейОбработке(ЭтотОбъект, ОсновныеПараметры());
	//	
	//	Возврат ПараметрыРегистрации;
	//КонецФункции 
#КонецОбласти

#КонецОбласти 

#Область СозданиеНаОсновании

Функция ДобавитьКомандуСозданияНаОсновании(КомандыСозданияНаОсновании, Идентификатор, ИмяИлиОбъектМетаданных, Представление = Неопределено, ДополнительныеДанные = Неопределено) Экспорт
	Если ТипЗнч(ИмяИлиОбъектМетаданных) = Тип("Строка") Тогда
		РабочееИмя = ИмяИлиОбъектМетаданных;
		Если Представление = Неопределено Тогда
			А1Э_Служебный.СлужебноеИсключение("При указании имени строкой необходимо явно указывать представление");
		КонецЕсли;
		РабочееПредставление = Представление;
	Иначе
		РабочееИмя = ИмяИлиОбъектМетаданных.ПолноеИмя;
		РабочееПредставление = ИмяИлиОбъектМетаданных.Синоним;
	КонецЕсли;
	
	КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
	КомандаСоздатьНаОсновании.Идентификатор = Идентификатор;
	КомандаСоздатьНаОсновании.Представление = РабочееПредставление;
	КомандаСоздатьНаОсновании.Обработчик = "А1Э_БСП.СоздатьНаОсновании";
	КомандаСоздатьНаОсновании.ДополнительныеПараметры = Новый Структура("А1_ИмяСоздаваемогоОбъекта", РабочееИмя);
	КомандаСоздатьНаОсновании.МножественныйВыбор = Ложь;
	Если ДополнительныеДанные <> Неопределено Тогда 
		ЗаполнитьЗначенияСвойств(КомандаСоздатьНаОсновании, ДополнительныеДанные);
	КонецЕсли;
	
КонецФункции

Функция СоздатьНаОсновании(Ссылка, ПараметрыВыполнения) Экспорт 
	#Если Сервер Или ВнешнееСоединение Тогда
		А1Э_Служебный.СлужебноеИсключение("Функция выполняется на клиенте");
	#Иначе
		ИмяСоздаваемогоОбъекта = А1Э_Структуры.ЗначениеСвойства(ПараметрыВыполнения.ОписаниеКоманды.ДополнительныеПараметры, "А1_ИмяСоздаваемогоОбъекта");
		Если ИмяСоздаваемогоОбъекта = Неопределено Тогда
			А1Э_Служебный.СлужебноеИсключение("Не определено имя создаваемого объекта в команде создания на основании!");
		КонецЕсли;
		ОткрытьФорму(ИмяСоздаваемогоОбъекта + ".ФормаОбъекта", Новый Структура("Основание", Ссылка));  
	#КонецЕсли	
КонецФункции

#КонецОбласти

#Область МеханизмыБСП

#Область Общее

Функция ПолучитьДанныеМеханизмовБСП(Форма)
	ДанныеМеханизмов = Форма[А1Э_Классы.ДанныеМеханизмов()];
	Если А1Э_Структуры.Класс(ДанныеМеханизмов) <> А1Э_Классы.ДанныеМеханизмов() Тогда
		Возврат Неопределено;
	КонецЕсли;
	Если ДанныеМеханизмов.МеханизмыБСП.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	Возврат ДанныеМеханизмов.МеханизмыБСП;
КонецФункции 

#КонецОбласти

#Область ОбработчикиСобытий

#Если НЕ Клиент Тогда
	Функция ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
		МеханизмыБСП = ПолучитьДанныеМеханизмовБСП(Форма);
		Если МеханизмыБСП = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		Если ИспользуютсяПодключаемыеКоманды(МеханизмыБСП) Тогда
			ПодключаемыеКоманды.ПриСозданииНаСервере(Форма);
		КонецЕсли;
	КонецФункции
	
	Функция ПриЧтенииНаСервере(Форма, ТекущийОбъект) Экспорт
		МеханизмыБСП = ПолучитьДанныеМеханизмовБСП(Форма);
		Если МеханизмыБСП = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;

		Если ИспользуютсяПодключаемыеКоманды(МеханизмыБСП) Тогда
			Если А1Э_Формы.ТипФормы(Форма) = "ФормаЭлемента" Тогда
				ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(Форма, А1Э_Формы.ОбъектИлиТаблицаФормы(Форма));
			КонецЕсли;
		КонецЕсли;
	КонецФункции
#КонецЕсли

#Если Клиент Тогда
	Функция ПриОткрытии(Форма, Отказ) Экспорт
		МеханизмыБСП = ПолучитьДанныеМеханизмовБСП(Форма);
		Если МеханизмыБСП = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;

		Если ИспользуютсяПодключаемыеКоманды(МеханизмыБСП) Тогда
			Если А1Э_Формы.ТипФормы(Форма) = "ФормаЭлемента" Тогда
				ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(Форма);
			КонецЕсли;
		КонецЕсли;
	КонецФункции
	
	Функция ПриАктивизацииСтроки(Форма, Элемент) Экспорт
		МеханизмыБСП = ПолучитьДанныеМеханизмовБСП(Форма);
		Если МеханизмыБСП = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;

		Если ИспользуютсяПодключаемыеКоманды(МеханизмыБСП) Тогда
			Если А1Э_Формы.ТипФормы(Форма) = "ФормаСписка" Тогда
				ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(Форма);
			КонецЕсли;
		КонецЕсли;
	КонецФункции
#КонецЕсли

#КонецОбласти 

#Область ПодключаемыеКоманды

Функция МеханизмПодключаемыеКоманды() Экспорт 
	Возврат "ПодключаемыеКоманды";	
КонецФункции

Функция ИспользуютсяПодключаемыеКоманды(МеханизмыБСП) 
	Возврат МеханизмыБСП.Найти(МеханизмПодключаемыеКоманды()) <> Неопределено	
КонецФункции

#Если Клиент Тогда
	Процедура Подключаемый_ОбновитьКоманды(Форма) Экспорт
		ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(Форма, А1Э_Формы.ОбъектИлиТаблицаФормы(Форма));
	КонецПроцедуры
	
	Процедура Подключаемый_ВыполнитьКоманду(Форма, Команда) Экспорт
		ПодключаемыеКомандыКлиент.ВыполнитьКоманду(Форма, Команда, А1Э_Формы.ОбъектИлиТаблицаФормы(Форма));
	КонецПроцедуры
#КонецЕсли

#Если НЕ Клиент Тогда
	Процедура Подключаемый_ВыполнитьКомандуНаСервере(Форма, Контекст, Результат) Экспорт
		ПодключаемыеКоманды.ВыполнитьКоманду(Форма, Контекст, А1Э_Формы.ОбъектИлиТаблицаФормы(Форма), Результат);
	КонецПроцедуры
#КонецЕсли

#КонецОбласти 

#КонецОбласти

