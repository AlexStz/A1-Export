#Область ПрограммныйИнтерфейс

#Если Клиент Тогда
	// Осуществляет вывод в документ MS Word. Документ будет открыт в соседнем окне. В веб-клиенте сохраняет результат вывода в PDF и выводит его на отдельную форму.
	//
	// Параметры:
	//  Макет				 - Строка, ДвоичныеДанные - Если строка, то это полный путь к существующему файлу Ворд. 
	//  ЗаменяемыеЗначения	 - Структура - 
	//    Ключ - имена меток в макете. Ключу "Метка1" соответствует метка "%%Метка1%%".
	//    Значение - Строка. Соответствующие метки в документе Ворд будут заменены на эту строку.
	//  ДанныеТаблиц		 - Массив - содержит структуры класса ТаблицаПодстановкиВорд 
	// 
	// Возвращаемое значение:
	//   - 
	//
	Функция Вывести(Макет, Знач ЗаменяемыеЗначения = Неопределено, Знач ДанныеТаблиц = Неопределено, Знач ДополнительныеПараметры = Неопределено) Экспорт  
		
		ДополнительныеПараметры = А1Э_Структуры.Структура(ДополнительныеПараметры);
		#Если ВебКлиент Тогда
			ДополнительныеПараметры.Вставить("Внутри1С", Истина);
		#КонецЕсли
		
		Если А1Э_Структуры.ЗначениеСвойства(ДополнительныеПараметры, "Внутри1С") = Истина Тогда
			МассивПараметров = А1Э_Массивы.Создать(Макет, ЗаменяемыеЗначения, ДанныеТаблиц, ДополнительныеПараметры); 
			ДанныеВыводаКлиент = А1Э_ГлобальныйКонтекст.СервернаяФункция("А1Э_Ворд.ВывестиНаСервере", МассивПараметров);
			Если ДанныеВыводаКлиент <> Неопределено Тогда
				ИмяДокумента = А1Э_Структуры.ЗначениеСвойства(ЗаменяемыеЗначения, "ИмяДокумента");
				Если ИмяДокумента = Неопределено Тогда
					ИмяДокумента = "Ваш файл";
				КонецЕсли;
				ПолучитьФайл(ДанныеВыводаКлиент.АдресВорд, ИмяДокумента, Истина);
			КонецЕсли;
		Иначе
			ДанныеВывода = ЗаполненныйДокументВорд(Макет, ЗаменяемыеЗначения, ДанныеТаблиц, ДополнительныеПараметры);	
			Если ДанныеВывода <> Неопределено Тогда
				ДанныеВывода.Ворд.Visible = Истина;
			КонецЕсли;
		КонецЕсли;
		
	КонецФункции
#КонецЕсли

#Если НЕ Клиент Тогда
	Функция ВывестиНаСервере(Макет, Знач ЗаменяемыеЗначения = Неопределено, Знач ДанныеТаблиц = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт 
		ДанныеВывода = ЗаполненныйДокументВорд(Макет, ЗаменяемыеЗначения, ДанныеТаблиц, ДополнительныеПараметры);
		Если ДанныеВывода = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
		ПутьКФайлуВорд = А1Э_ФайловаяСистема.ПутьКНовомуВременномуФайлу("docx");
		ДанныеВывода.ДокументВорд.SaveAs(ПутьКФайлуВорд);
		А1Э_Ворд.ЗакрытьВорд(ДанныеВывода.Ворд);
		
		АдресВорд = Новый УникальныйИдентификатор();
		ДанныеВыводаКлиент = Новый Структура;
		ДанныеВыводаКлиент.Вставить("АдресВорд", ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ПутьКФайлуВорд), АдресВорд));

		Возврат ДанныеВыводаКлиент;
	КонецФункции	
#КонецЕсли
  
Функция ЗаполненныйДокументВорд(Макет, Знач ЗаменяемыеЗначения = Неопределено, Знач ДанныеТаблиц = Неопределено, ДополнительныеПараметры = Неопределено)
	Попытка
		Ворд = Неопределено;
		ДокументВорд = А1Э_Ворд.ОткрытьДокументВорд(Макет, Ворд);
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		Сообщить(ОписаниеОшибки);
		Возврат Неопределено;
	КонецПопытки;
	
	ЗаменяемыеЗначения = А1Э_Структуры.Структура(ЗаменяемыеЗначения);
	ДанныеТаблиц = А1Э_Массивы.Массив(ДанныеТаблиц);
	
	Попытка
		А1Э_Ворд.ПроизвестиЗамену(ДокументВорд, ЗаменяемыеЗначения);
		
		Для Каждого Структура Из ДанныеТаблиц Цикл
			А1Э_Ворд.ЗаполнитьТаблицы(ДокументВорд, Структура.МассивОтборов, Структура.Таблица, Структура.ИменаКолонок);
		КонецЦикла;
		
		ДанныеВывода = Новый Структура;
		ДанныеВывода.Вставить("Ворд", Ворд);
		ДанныеВывода.Вставить("ДокументВорд", ДокументВорд);
		Возврат ДанныеВывода;
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		Сообщить("При заполнении документа MS Word возникла ошибка: " + ОписаниеОшибки + ". Обратитесь к администратору системы!");
		А1Э_Ворд.ЗакрытьВорд(Ворд);
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции 

#КонецОбласти 

#Область ИнтерфейсВорд

// Функция - Открыть документ ворд
//
// Параметры:
//  Файл - Строка, ДвоичныеДанные - Если Строка, то путь к файлу.
//  Ворд - COMОбъект("Word.Application") - будет создан если не передан. 
// 
// Возвращаемое значение:
//   - 
//
Функция ОткрытьДокументВорд(Файл, Ворд = Неопределено) Экспорт 
	ПутьКФайлу = А1Э_ФайловаяСистема.ПолучитьПутьКФайлу(Файл, "docx"); 
	
	Если Ворд = Неопределено Тогда
		Ворд = ОткрытьВорд(ПутьКФайлу);
	КонецЕсли;
	
	Попытка
		ДокументВорд = Ворд.Application.Documents(1);
		ДокументВорд.Activate(); 
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		ЗакрытьВорд(Ворд);
		ИсключениеВорд("Ворд-3", ОписаниеОшибки); 
	КонецПопытки;
	
	Возврат ДокументВорд;
	
КонецФункции

Функция ОткрытьВорд(ПутьКФайлу) Экспорт 
	Попытка
		Ворд = Новый COMОбъект("Word.Application");
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		ИсключениеВорд("Ворд-1", ОписаниеОшибки);
	КонецПопытки;
	
	Попытка
		Ворд.Documents.Add(ПутьКФайлу);
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		ЗакрытьВорд(Ворд, Ложь);
		ИсключениеВорд("Ворд-2", ОписаниеОшибки);
	КонецПопытки;
	
	Возврат Ворд;
КонецФункции 

Функция ЗакрытьВорд(Ворд, ЗакрыватьДокументы = Истина) Экспорт
	Если Ворд = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	Если ЗакрыватьДокументы Тогда
		Ворд.Documents.Close();
	КонецЕсли;
	Ворд.DisplayAlerts = 0; 
	Ворд.Quit();
	Ворд = Неопределено;
КонецФункции 

Функция ПроизвестиЗамену(ДокументВорд, СтруктураЗначений) Экспорт
	#Если Сервер И НЕ Сервер Тогда
		СтруктураЗначений = Новый Структура;		
	#КонецЕсли 
	Для Каждого Пара Из СтруктураЗначений Цикл
		ВыполнитьЗамену(ДокументВорд, Пара.Ключ, Пара.Значение);
	КонецЦикла;
КонецФункции

Функция ДобавитьОтборТаблицы(МассивОтборов, НомерСтроки, НомерКолонки, Текст) Экспорт
	#Если Сервер И НЕ Сервер Тогда
		МассивОтборов = Новый Массив;		
	#КонецЕсли 
	МассивОтборов.Добавить(Новый Структура("НомерСтроки,НомерКолонки,Текст", НомерСтроки, НомерКолонки, Текст));
КонецФункции

// Возвращает массив номеров таблиц в соответствии с отбором. Отбор устанавливается по тексту в ячейках.
// Проверяется вхождение текста отбора в текст ячейки (иначе сложности со служебными символами).
// Рекомендуется делать избыточные отборы.
//
// Параметры:
//  ДокументВорд	 - COMОбъект - получается с помощью ОткрытьДокументВорд. 
//  МассивОтборов	 - Массив - массив структур со следующими ключами:
//   НомерСтроки - Число - номер строки. Первая строка имеет номер 1.
//   НомерКолонки - Число - номер колонки. Первая колонка имеет номер 1.
//   Текст - Строка - текст в ячейке
// 
// Возвращаемое значение:
//  Массив - 
//
Функция ПолучитьНомераТаблиц(ДокументВорд, МассивОтборов) Экспорт
	
	Результат = Новый Массив;
	КоличествоТаблиц = ДокументВорд.Content.Tables.Count;
	
	Для Сч = 1 По КоличествоТаблиц Цикл
		ТаблицаВорд = ДокументВорд.Content.Tables(Сч);
		СоответствуетОтборам = Истина;
		Для Каждого Отбор Из МассивОтборов Цикл
			
			Если ТаблицаВорд.Rows.Count < Отбор.НомерСтроки Тогда
				СоответствуетОтборам = Ложь;
				Прервать;
			КонецЕсли;
			Если ТаблицаВорд.Columns.Count < Отбор.НомерКолонки Тогда
				СоответствуетОтборам = Ложь;
				Прервать;
			КонецЕсли;
			
			ТекстЯчейки = ТаблицаВорд.Cell(Отбор.НомерСтроки, Отбор.НомерКолонки).Range().Text;
			Если СтрНайти(ТекстЯчейки, Отбор.Текст) = 0 Тогда
				СоответствуетОтборам = Ложь;
				Продолжить;
			КонецЕсли;
			
		КонецЦикла;
		Если СоответствуетОтборам Тогда
			Результат.Добавить(Сч);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Заполняет таблицу значениями из ТаблицыЗначений или массива структур. Необходимо, чтобы в таблице уже были 2 строки - 
// Шапка и пустая строка, которая после заполнения будет удалена.
//
// Параметры:
//  ДокументВорд - COMОбъект - получается с помощью ОткрытьДокументВорд.
//  НомерТаблицы - Число - Номер таблицы в документе. Рекомендуется передавать результаты поиска из функции ПолучитьНомераТаблиц 
//  Таблица		 - 	 - 
//  ИменаКолонок - 	 - 
//
Функция ЗаполнитьТаблицу(ДокументВорд, НомерТаблицы, Таблица, Знач ИменаКолонок = Неопределено) Экспорт
	#Если Сервер Или ВнешнееСоединение Тогда
		Если ТипЗнч(Таблица) = Тип("ТаблицаЗначений") И ИменаКолонок = Неопределено Тогда
			ИменаКолонок = Новый Массив;
			Для Каждого Колонка Из Таблица.Колонки ЦИкл
				ИменаКолонок.Добавить(Колонка.Имя);
			КонецЦикла;
		КонецЕсли;
	#КонецЕсли
	ИменаКолонок = А1Э_Массивы.Массив(ИменаКолонок);
	ТаблицаВорд = ДокументВорд.Content.Tables(НомерТаблицы);
	
	Если ТаблицаВорд.Rows.Count < 2 Тогда
		Сообщить("В документе MS Word в таблице №" + НомерТаблицы + " должно быть две строки - строка с заголовками и пустая строка, которую программа использует для заполнения!"); 
		Возврат Неопределено;
	КонецЕсли;
	
	ПустаяСтрока = ТаблицаВорд.Rows(2);

	НомерСтроки = 1;
	ПервыйПроход = Истина;
	Пока НомерСтроки < Таблица.Количество() + 1 Цикл
		НомерСтроки = НомерСтроки + 1;
		Ряд = ТаблицаВорд.Rows().Add(ПустаяСтрока);
		НомерКолонки = 0;
		Пока НомерКолонки < ИменаКолонок.Количество() Цикл
			НомерКолонки = НомерКолонки + 1;
			Если НомерКолонки > ТаблицаВорд.Columns.Count Тогда
				Если ПервыйПроход Тогда
					Сообщить("В документе MS Word в таблице №" + НомерТаблицы + " должно быть не менее " + ИменаКолонок.Количество() + " колонок." + Символы.ПС
					+ "Часть данных не была перенесена в таблицу!");
					ПервыйПроход = Ложь;
				КонецЕсли;
				Продолжить;
			КонецЕсли;
			ТаблицаВорд.Cell(НомерСтроки, НомерКолонки).Range().Text = Таблица[НомерСтроки - 2][ИменаКолонок[НомерКолонки - 1]];
		КонецЦикла;
	КонецЦикла;
	ПустаяСтрока.Delete();
КонецФункции

Функция ЗаполнитьТаблицы(ДокументВорд, МассивОтборов, Таблица, Знач ИменаКолонок = Неопределено) Экспорт
	МассивНомеровТаблиц = А1Э_Ворд.ПолучитьНомераТаблиц(ДокументВорд, МассивОтборов);
	Если МассивНомеровТаблиц.Количество() = 0 Тогда
		Сообщить(ТекстСообщенияТаблицыНеНайдены(МассивОтборов));
		Возврат Неопределено;
	КонецЕсли;
	Для Каждого НомерТаблицы Из МассивНомеровТаблиц Цикл
		ЗаполнитьТаблицу(ДокументВорд, НомерТаблицы, Таблица, ИменаКолонок);
	КонецЦикла;
КонецФункции

#КонецОбласти

#Область СлужебноВорд

Функция ВыполнитьЗамену(ДокументВорд, Ключ, Значение) Экспорт
	ВыполнитьЗаменуСлужебный(ДокументВорд.Content, "%%"+ Ключ + "%%",  Строка(Значение));
	ВыполнитьЗаменуСлужебный(ДокументВорд.Sections(1).Footers.Item(1).Range(), "%%"+ Ключ + "%%",  Строка(Значение));
	ВыполнитьЗаменуСлужебный(ДокументВорд.Sections(1).Headers.Item(1).Range(), "%%"+ Ключ + "%%",  Строка(Значение));
КонецФункции

Функция ВыполнитьЗаменуСлужебный(ОбъектВорд, СтрокаПоиска, СтрокаЗамены)
	ОбъектВорд.Find.Execute(СтрокаПоиска,,,,,,,,,СтрокаЗамены,2);
КонецФункции

Функция ТекстСообщенияТаблицыНеНайдены(МассивОтборов)
	Массив = Новый Массив;
	Массив.Добавить("Не найдены таблицы для заполнения согласно отбору! Проверьте, что:");
	Для Каждого Отбор Из МассивОтборов Цикл
		Массив.Добавить("В ячейке строка " + Отбор.НомерСтроки + " и колонка " + Отбор.НомерКолонки + " присутствует текст <" + Отбор.Текст + ">.");
	КонецЦикла;
	Текст = СтрСоединить(Массив, Символы.ПС);
	Возврат Текст;		
КонецФункции


#КонецОбласти

#Область ОбработкаИсключений

Функция ИсключениеВорд(КодИсключения, ОписаниеОшибки)
	ОписаниеИсключения = А1Э_ТаблицыЗначений.НайтиСтроку(МассивОписанийИсключений(), "Код", КодИсключения); 
	ТекстИсключения = "(КодОшибки:" + КодИсключения + "): " + ОписаниеИсключения + ". Данные отладки: " + ОписаниеОшибки;
	А1Э_Служебный.СлужебноеИсключение(ТекстИсключения);
КонецФункции

Функция МассивОписанийИсключений()
	Массив = Новый Массив;
	ДобавитьИсключение(Массив, "Ворд-1", "Не обнаружена программа Microsoft Word.");
	ДобавитьИсключение(Массив, "Ворд-2", "Не удалось открыть файл.");
	ДобавитьИсключение(Массив, "Ворд-3", "В файле не обнаружены данные документа.");
	Возврат Массив;
КонецФункции 

Функция ДобавитьИсключение(МассивОписанийИсключений, Код, Описание)
	МассивОписанийИсключений.Добавить(А1Э_Классы.НовыйОписаниеИсключения(Код, Описание));	
КонецФункции

#КонецОбласти 

#Область ФормаВыводаВорд

#Если Клиент Тогда
	Функция ОткрытьФормуПросмотраВыводаВорд(ДанныеВыводаКлиент) 
		Если ДанныеВыводаКлиент = Неопределено Тогда
			Сообщить("Не удалось сформировать документ!");
		КонецЕсли;
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("А1_ПриСозданииНаСервере", "А1Э_Ворд.ФормаВыводаВорд_ПриСозданииНаСервере");
		ПараметрыФормы.Вставить("АдресВорд", ДанныеВыводаКлиент.АдресВорд);
		ПараметрыФормы.Вставить("АдресПДФ", ДанныеВыводаКлиент.АдресПДФ);
		ОткрытьФорму("ОбщаяФорма.А1Э_УниверсальнаяФорма", ПараметрыФормы);
	КонецФункции
#КонецЕсли

#Если НЕ Клиент Тогда
	Функция ФормаВыводаВорд_ПриСозданииНаСервере(Форма) Экспорт
		МассивРеквизитов = Новый Массив;
		А1Э_Формы.ДобавитьОписаниеРеквизитаИЭлемента(МассивРеквизитов, "ОкноПросмотра", А1Э_Строки.ОписаниеТипа(0), ,,,,
		Новый Структура("Вид", ВидПоляФормы.ПолеHTMLДокумента));
		А1Э_Формы.ДобавитьОписаниеРеквизита(МассивРеквизитов, "АдресВорд", А1Э_Строки.ОписаниеТипа(0));
		А1Э_Формы.ДобавитьОписаниеРеквизита(МассивРеквизитов, "АдресПДФ", А1Э_Строки.ОписаниеТипа(0));
		А1Э_Формы.ДобавитьРеквизитыИЭлементы(Форма, МассивРеквизитов);
		Форма.АдресВорд = Форма.Параметры.АдресВорд;
		Форма.АдресПДФ = Форма.Параметры.АдресПДФ;
		
		
		Форма.ОкноПросмотра = "<html>
		|<head>
		|</head>
		|<body><embed width=100% height=100% type=""application/pdf"" src="""+Форма.АдресПДФ+"""></embed>
		|</body></html>";
		
	КонецФункции
#КонецЕсли
 	

#КонецОбласти 