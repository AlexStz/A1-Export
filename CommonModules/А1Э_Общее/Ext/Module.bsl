
// Вызывает исключение если значение не соответствует переданному типу.
//
// Параметры:
//  Значение - ЛюбоеЗначение - Значение, тип которого проверяется
//  Тип		 - Тип, Строка	 - Тип, которому должно соответствовать Значение, или имя этого типа.
//  Строго	 - Булево		 - Если проверка строгая, в случае несоответствия вызывает исключение. Иначе просто возвращает ложь.
// 
// Возвращаемое значение:
//  Булево - Истина если соответствует, Ложь / Исключение если не соответствует. 
//
Функция ПроверитьТип(Значение, Знач Тип, Строго = Истина) Экспорт
	Если ТипЗнч(Тип) = Тип("Строка") Тогда
		Тип = Тип(Тип);
	КонецЕсли;
	Если ТипЗнч(Значение) <> Тип Тогда
		Если Строго Тогда
			ВызватьИсключение "Переданное значение " + Значение + " не соответствует типу " + Тип + "!";
		Иначе
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	Возврат Истина;
КонецФункции

#Область Контакты

Функция МассивКонтактов() Экспорт
	МассивКонтактов = Новый Массив;
	МассивКонтактов.Добавить(НовыйКонтакт("E-mail", "arseny.gerashchenko@gmail.com"));
	МассивКонтактов.Добавить(НовыйКонтакт("Моб. телефон", "+7 (951) 686-78-89"));
	Возврат МассивКонтактов;
КонецФункции

Функция НовыйКонтакт(Тип, Значение)
	Возврат Новый Структура("Тип,Значение", Тип, Значение);	
КонецФункции

#КонецОбласти

//Экспорт
Функция РезультатФункции(ПолноеИмяФункции, Параметр1 = "НЕ_БУДЕТ_ДОБАВЛЕНО", Параметр2 = "НЕ_БУДЕТ_ДОБАВЛЕНО", Параметр3 = "НЕ_БУДЕТ_ДОБАВЛЕНО", Параметр4 = "НЕ_БУДЕТ_ДОБАВЛЕНО", Параметр5 = "НЕ_БУДЕТ_ДОБАВЛЕНО",
	Параметр6 = "НЕ_БУДЕТ_ДОБАВЛЕНО", Параметр7 = "НЕ_БУДЕТ_ДОБАВЛЕНО", Параметр8 = "НЕ_БУДЕТ_ДОБАВЛЕНО", Параметр9 = "НЕ_БУДЕТ_ДОБАВЛЕНО", Параметр10 = "НЕ_БУДЕТ_ДОБАВЛЕНО") Экспорт 
	
	Возврат Вычислить(СтрокаВыполнения(ПолноеИмяФункции, Параметр1, Параметр2, Параметр3, Параметр4, Параметр5,
	Параметр6, Параметр7, Параметр8, Параметр9, Параметр10));
КонецФункции

//Экспорт
Процедура РезультатПроцедуры(ПолноеИмяФункции, Параметр1 = "НЕ_БУДЕТ_ДОБАВЛЕНО", Параметр2 = "НЕ_БУДЕТ_ДОБАВЛЕНО", Параметр3 = "НЕ_БУДЕТ_ДОБАВЛЕНО", Параметр4 = "НЕ_БУДЕТ_ДОБАВЛЕНО", Параметр5 = "НЕ_БУДЕТ_ДОБАВЛЕНО",
	Параметр6 = "НЕ_БУДЕТ_ДОБАВЛЕНО", Параметр7 = "НЕ_БУДЕТ_ДОБАВЛЕНО", Параметр8 = "НЕ_БУДЕТ_ДОБАВЛЕНО", Параметр9 = "НЕ_БУДЕТ_ДОБАВЛЕНО", Параметр10 = "НЕ_БУДЕТ_ДОБАВЛЕНО") Экспорт
	
	Выполнить СтрокаВыполнения(ПолноеИмяФункции, Параметр1, Параметр2, Параметр3, Параметр4, Параметр5,
	Параметр6, Параметр7, Параметр8, Параметр9, Параметр10);
КонецПроцедуры

Функция СтрокаВыполнения(ПолноеИмяФункции, Параметр1 = "НЕ_БУДЕТ_ДОБАВЛЕНО", Параметр2 = "НЕ_БУДЕТ_ДОБАВЛЕНО", Параметр3 = "НЕ_БУДЕТ_ДОБАВЛЕНО", Параметр4 = "НЕ_БУДЕТ_ДОБАВЛЕНО", Параметр5 = "НЕ_БУДЕТ_ДОБАВЛЕНО",
	Параметр6 = "НЕ_БУДЕТ_ДОБАВЛЕНО", Параметр7 = "НЕ_БУДЕТ_ДОБАВЛЕНО", Параметр8 = "НЕ_БУДЕТ_ДОБАВЛЕНО", Параметр9 = "НЕ_БУДЕТ_ДОБАВЛЕНО", Параметр10 = "НЕ_БУДЕТ_ДОБАВЛЕНО")
	СтрокаВыполнения = ПолноеИмяФункции + "(";
	Если Параметр1 = "НЕ_БУДЕТ_ДОБАВЛЕНО" Тогда
		Возврат СтрокаВыполнения + ")";
	КонецЕсли;
	СтрокаВыполнения = СтрокаВыполнения + "Параметр1";
	Если Параметр2 = "НЕ_БУДЕТ_ДОБАВЛЕНО" Тогда
		Возврат СтрокаВыполнения + ")";
	КонецЕсли;
	СтрокаВыполнения = СтрокаВыполнения + ", Параметр2";
	Если Параметр3 = "НЕ_БУДЕТ_ДОБАВЛЕНО" Тогда
		Возврат СтрокаВыполнения + ")";
	КонецЕсли;
	СтрокаВыполнения = СтрокаВыполнения + ", Параметр3";
	Если Параметр4 = "НЕ_БУДЕТ_ДОБАВЛЕНО" Тогда
		Возврат СтрокаВыполнения + ")";
	КонецЕсли;
	СтрокаВыполнения = СтрокаВыполнения + ", Параметр4";
	Если Параметр5 = "НЕ_БУДЕТ_ДОБАВЛЕНО" Тогда
		Возврат СтрокаВыполнения + ")";
	КонецЕсли;
	СтрокаВыполнения = СтрокаВыполнения + ", Параметр5";
	Если Параметр6 = "НЕ_БУДЕТ_ДОБАВЛЕНО" Тогда
		Возврат СтрокаВыполнения + ")";
	КонецЕсли;
	СтрокаВыполнения = СтрокаВыполнения + ", Параметр6";
	Если Параметр7 = "НЕ_БУДЕТ_ДОБАВЛЕНО" Тогда
		Возврат СтрокаВыполнения + ")";
	КонецЕсли;
	СтрокаВыполнения = СтрокаВыполнения + ", Параметр7";
	Если Параметр8 = "НЕ_БУДЕТ_ДОБАВЛЕНО" Тогда
		Возврат СтрокаВыполнения + ")";
	КонецЕсли;
	СтрокаВыполнения = СтрокаВыполнения + ", Параметр8";
	Если Параметр9 = "НЕ_БУДЕТ_ДОБАВЛЕНО" Тогда
		Возврат СтрокаВыполнения + ")";
	КонецЕсли;
	СтрокаВыполнения = СтрокаВыполнения + ", Параметр9";
	Если Параметр10 = "НЕ_БУДЕТ_ДОБАВЛЕНО" Тогда
		Возврат СтрокаВыполнения + ")";
	КонецЕсли;
	СтрокаВыполнения = СтрокаВыполнения + ", Параметр10";
	Возврат СтрокаВыполнения + ")";
КонецФункции 

#Область Устарело

Функция ВычислитьФункцию(ПолноеИмяФункции, Параметры) Экспорт
	ПараметрыСтрока = "";
	Если Параметры <> Неопределено И Параметры.Количество() > 0 Тогда
		Для Индекс = 0 По Параметры.ВГраница() Цикл 
			ПараметрыСтрока = ПараметрыСтрока + "Параметры[" + Индекс + "],";
		КонецЦикла;
		ПараметрыСтрока = Сред(ПараметрыСтрока, 1, СтрДлина(ПараметрыСтрока) - 1);
	КонецЕсли;
	Возврат Вычислить(ПолноеИмяФункции + "(" + ПараметрыСтрока + ")");
КонецФункции

Функция ВыполнитьПроцедуру(ПолноеИмяФункции, Параметры) Экспорт
	ПараметрыСтрока = "";
	Если Параметры <> Неопределено И Параметры.Количество() > 0 Тогда
		Для Индекс = 0 По Параметры.ВГраница() Цикл 
			ПараметрыСтрока = ПараметрыСтрока + "Параметры[" + Индекс + "],";
		КонецЦикла;
		ПараметрыСтрока = Сред(ПараметрыСтрока, 1, СтрДлина(ПараметрыСтрока) - 1);
	КонецЕсли;
	Выполнить ПолноеИмяФункции + "(" + ПараметрыСтрока + ")";
КонецФункции

#КонецОбласти 

	
	
